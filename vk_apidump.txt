Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
	pCreateInfo: 					const VkInstanceCreateInfo* = 00000093924FEC60:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
		pNext: 							const void* = 00000093924FEC38
		flags: 							VkInstanceCreateFlags = 0
		pApplicationInfo: 				const VkApplicationInfo* = NULL
		enabledLayerCount: 				uint32_t = 2
		ppEnabledLayerNames: 			const char* const* = 0000019877365F90
			ppEnabledLayerNames[0]: 		const char* const = "VK_LAYER_LUNARG_api_dump"
			ppEnabledLayerNames[1]: 		const char* const = "VK_LAYER_LUNARG_standard_validation"
		enabledExtensionCount: 			uint32_t = 3
		ppEnabledExtensionNames: 		const char* const* = 0000019877336CD0
			ppEnabledExtensionNames[0]: 	const char* const = "VK_KHR_surface"
			ppEnabledExtensionNames[1]: 	const char* const = "VK_EXT_debug_utils"
			ppEnabledExtensionNames[2]: 	const char* const = "VK_KHR_win32_surface"
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pInstance: 						VkInstance* = 0000019879BF0D00

Thread 0, Frame 0:
vkCreateDebugUtilsMessengerEXT(instance, pCreateInfo, pAllocator, pMessenger) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pCreateInfo: 					const VkDebugUtilsMessengerCreateInfoEXT* = 00000093924FF1C8:
		sType: 							VkStructureType = UNKNOWN (1000128004)
		pNext: 							const void* = NULL
		flags: 							VkDebugUtilsMessengerCreateFlagsEXT = 0
		messageSeverity: 				VkDebugUtilsMessageSeverityFlagsEXT = 4352 (VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT)
		messageType: 					VkDebugUtilsMessageTypeFlagsEXT = 7 (VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT)
		pfnUserCallback: 				PFN_vkDebugUtilsMessengerCallbackEXT = 00007FF67F58271C
		pUserData: 						void* = NULL
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pMessenger: 					VkDebugUtilsMessengerEXT* = 000001987B73D3D0

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = 000001987B73D530
		pPhysicalDevices[0]: 			VkPhysicalDevice = 000001987B5010C0
		pPhysicalDevices[1]: 			VkPhysicalDevice = 000001987B501150

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = 000001987B73D650
		pPhysicalDevices[0]: 			VkPhysicalDevice = 000001987B5010C0
		pPhysicalDevices[1]: 			VkPhysicalDevice = 000001987B501150

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198484
		driverVersion: 					uint32_t = 1745387520
		vendorID: 						uint32_t = 4318
		deviceID: 						uint32_t = 7073
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1070 With Max-Q Design"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 22
			pipelineCacheUUID[1]: 			uint8_t = 251
			pipelineCacheUUID[2]: 			uint8_t = 4
			pipelineCacheUUID[3]: 			uint8_t = 71
			pipelineCacheUUID[4]: 			uint8_t = 81
			pipelineCacheUUID[5]: 			uint8_t = 92
			pipelineCacheUUID[6]: 			uint8_t = 9
			pipelineCacheUUID[7]: 			uint8_t = 112
			pipelineCacheUUID[8]: 			uint8_t = 47
			pipelineCacheUUID[9]: 			uint8_t = 144
			pipelineCacheUUID[10]: 			uint8_t = 239
			pipelineCacheUUID[11]: 			uint8_t = 11
			pipelineCacheUUID[12]: 			uint8_t = 57
			pipelineCacheUUID[13]: 			uint8_t = 94
			pipelineCacheUUID[14]: 			uint8_t = 208
			pipelineCacheUUID[15]: 			uint8_t = 19
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 32768
			maxImageDimension2D: 			uint32_t = 32768
			maxImageDimension3D: 			uint32_t = 16384
			maxImageDimensionCube: 			uint32_t = 32768
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 4294967295
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 4096
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1024
			sparseAddressSpaceSize: 		VkDeviceSize = 18446744073709551615
			maxBoundDescriptorSets: 		uint32_t = 32
			maxPerStageDescriptorSamplers: 	uint32_t = 1048576
			maxPerStageDescriptorUniformBuffers: uint32_t = 15
			maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
			maxPerStageDescriptorSampledImages: uint32_t = 1048576
			maxPerStageDescriptorStorageImages: uint32_t = 1048576
			maxPerStageDescriptorInputAttachments: uint32_t = 1048576
			maxPerStageResources: 			uint32_t = 4294967295
			maxDescriptorSetSamplers: 		uint32_t = 1048576
			maxDescriptorSetUniformBuffers: uint32_t = 90
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
			maxDescriptorSetStorageBuffers: uint32_t = 1048576
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1048576
			maxDescriptorSetStorageImages: 	uint32_t = 1048576
			maxDescriptorSetInputAttachments: uint32_t = 1048576
			maxVertexInputAttributes: 		uint32_t = 32
			maxVertexInputBindings: 		uint32_t = 32
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 2048
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4216
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 1024
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 49152
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 2147483647
				maxComputeWorkGroupCount[1]: 	uint32_t = 65535
				maxComputeWorkGroupCount[2]: 	uint32_t = 65535
			maxComputeWorkGroupInvocations: uint32_t = 1536
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1536
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 15
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65536
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 256
			minStorageBufferOffsetAlignment: VkDeviceSize = 32
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 32768
			maxFramebufferHeight: 			uint32_t = 32768
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 1
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 1
				pointSizeRange[1]: 				float = 189.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0.5
				lineWidthRange[1]: 				float = 10
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.125
			strictLines: 					VkBool32 = 1
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
			nonCoherentAtomSize: 			VkDeviceSize = 64
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198485
		driverVersion: 					uint32_t = 1644773
		vendorID: 						uint32_t = 32902
		deviceID: 						uint32_t = 16027
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 212
			pipelineCacheUUID[1]: 			uint8_t = 44
			pipelineCacheUUID[2]: 			uint8_t = 214
			pipelineCacheUUID[3]: 			uint8_t = 33
			pipelineCacheUUID[4]: 			uint8_t = 211
			pipelineCacheUUID[5]: 			uint8_t = 35
			pipelineCacheUUID[6]: 			uint8_t = 227
			pipelineCacheUUID[7]: 			uint8_t = 33
			pipelineCacheUUID[8]: 			uint8_t = 216
			pipelineCacheUUID[9]: 			uint8_t = 47
			pipelineCacheUUID[10]: 			uint8_t = 217
			pipelineCacheUUID[11]: 			uint8_t = 35
			pipelineCacheUUID[12]: 			uint8_t = 223
			pipelineCacheUUID[13]: 			uint8_t = 38
			pipelineCacheUUID[14]: 			uint8_t = 219
			pipelineCacheUUID[15]: 			uint8_t = 17
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 16384
			maxImageDimension2D: 			uint32_t = 16384
			maxImageDimension3D: 			uint32_t = 2048
			maxImageDimensionCube: 			uint32_t = 16384
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 134217728
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 3758817
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1
			sparseAddressSpaceSize: 		VkDeviceSize = 17592186044416
			maxBoundDescriptorSets: 		uint32_t = 8
			maxPerStageDescriptorSamplers: 	uint32_t = 64
			maxPerStageDescriptorUniformBuffers: uint32_t = 200
			maxPerStageDescriptorStorageBuffers: uint32_t = 200
			maxPerStageDescriptorSampledImages: uint32_t = 200
			maxPerStageDescriptorStorageImages: uint32_t = 16
			maxPerStageDescriptorInputAttachments: uint32_t = 8
			maxPerStageResources: 			uint32_t = 200
			maxDescriptorSetSamplers: 		uint32_t = 384
			maxDescriptorSetUniformBuffers: uint32_t = 1200
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
			maxDescriptorSetStorageBuffers: uint32_t = 1200
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1200
			maxDescriptorSetStorageImages: 	uint32_t = 96
			maxDescriptorSetInputAttachments: uint32_t = 8
			maxVertexInputAttributes: 		uint32_t = 16
			maxVertexInputBindings: 		uint32_t = 16
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 4095
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4096
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 256
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 32768
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 65536
				maxComputeWorkGroupCount[1]: 	uint32_t = 65536
				maxComputeWorkGroupCount[2]: 	uint32_t = 65536
			maxComputeWorkGroupInvocations: uint32_t = 1024
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1024
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 16
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65535
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 32
			minStorageBufferOffsetAlignment: VkDeviceSize = 16
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 16384
			maxFramebufferHeight: 			uint32_t = 16384
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 83.333
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 0.125
				pointSizeRange[1]: 				float = 255.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0
				lineWidthRange[1]: 				float = 7.99219
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.0078125
			strictLines: 					VkBool32 = 0
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 16
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 16
			nonCoherentAtomSize: 			VkDeviceSize = 1
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198484
		driverVersion: 					uint32_t = 1745387520
		vendorID: 						uint32_t = 4318
		deviceID: 						uint32_t = 7073
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1070 With Max-Q Design"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 22
			pipelineCacheUUID[1]: 			uint8_t = 251
			pipelineCacheUUID[2]: 			uint8_t = 4
			pipelineCacheUUID[3]: 			uint8_t = 71
			pipelineCacheUUID[4]: 			uint8_t = 81
			pipelineCacheUUID[5]: 			uint8_t = 92
			pipelineCacheUUID[6]: 			uint8_t = 9
			pipelineCacheUUID[7]: 			uint8_t = 112
			pipelineCacheUUID[8]: 			uint8_t = 47
			pipelineCacheUUID[9]: 			uint8_t = 144
			pipelineCacheUUID[10]: 			uint8_t = 239
			pipelineCacheUUID[11]: 			uint8_t = 11
			pipelineCacheUUID[12]: 			uint8_t = 57
			pipelineCacheUUID[13]: 			uint8_t = 94
			pipelineCacheUUID[14]: 			uint8_t = 208
			pipelineCacheUUID[15]: 			uint8_t = 19
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 32768
			maxImageDimension2D: 			uint32_t = 32768
			maxImageDimension3D: 			uint32_t = 16384
			maxImageDimensionCube: 			uint32_t = 32768
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 4294967295
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 4096
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1024
			sparseAddressSpaceSize: 		VkDeviceSize = 18446744073709551615
			maxBoundDescriptorSets: 		uint32_t = 32
			maxPerStageDescriptorSamplers: 	uint32_t = 1048576
			maxPerStageDescriptorUniformBuffers: uint32_t = 15
			maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
			maxPerStageDescriptorSampledImages: uint32_t = 1048576
			maxPerStageDescriptorStorageImages: uint32_t = 1048576
			maxPerStageDescriptorInputAttachments: uint32_t = 1048576
			maxPerStageResources: 			uint32_t = 4294967295
			maxDescriptorSetSamplers: 		uint32_t = 1048576
			maxDescriptorSetUniformBuffers: uint32_t = 90
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
			maxDescriptorSetStorageBuffers: uint32_t = 1048576
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1048576
			maxDescriptorSetStorageImages: 	uint32_t = 1048576
			maxDescriptorSetInputAttachments: uint32_t = 1048576
			maxVertexInputAttributes: 		uint32_t = 32
			maxVertexInputBindings: 		uint32_t = 32
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 2048
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4216
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 1024
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 49152
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 2147483647
				maxComputeWorkGroupCount[1]: 	uint32_t = 65535
				maxComputeWorkGroupCount[2]: 	uint32_t = 65535
			maxComputeWorkGroupInvocations: uint32_t = 1536
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1536
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 15
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65536
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 256
			minStorageBufferOffsetAlignment: VkDeviceSize = 32
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 32768
			maxFramebufferHeight: 			uint32_t = 32768
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 1
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 1
				pointSizeRange[1]: 				float = 189.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0.5
				lineWidthRange[1]: 				float = 10
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.125
			strictLines: 					VkBool32 = 1
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
			nonCoherentAtomSize: 			VkDeviceSize = 64
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198485
		driverVersion: 					uint32_t = 1644773
		vendorID: 						uint32_t = 32902
		deviceID: 						uint32_t = 16027
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 212
			pipelineCacheUUID[1]: 			uint8_t = 44
			pipelineCacheUUID[2]: 			uint8_t = 214
			pipelineCacheUUID[3]: 			uint8_t = 33
			pipelineCacheUUID[4]: 			uint8_t = 211
			pipelineCacheUUID[5]: 			uint8_t = 35
			pipelineCacheUUID[6]: 			uint8_t = 227
			pipelineCacheUUID[7]: 			uint8_t = 33
			pipelineCacheUUID[8]: 			uint8_t = 216
			pipelineCacheUUID[9]: 			uint8_t = 47
			pipelineCacheUUID[10]: 			uint8_t = 217
			pipelineCacheUUID[11]: 			uint8_t = 35
			pipelineCacheUUID[12]: 			uint8_t = 223
			pipelineCacheUUID[13]: 			uint8_t = 38
			pipelineCacheUUID[14]: 			uint8_t = 219
			pipelineCacheUUID[15]: 			uint8_t = 17
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 16384
			maxImageDimension2D: 			uint32_t = 16384
			maxImageDimension3D: 			uint32_t = 2048
			maxImageDimensionCube: 			uint32_t = 16384
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 134217728
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 3758817
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1
			sparseAddressSpaceSize: 		VkDeviceSize = 17592186044416
			maxBoundDescriptorSets: 		uint32_t = 8
			maxPerStageDescriptorSamplers: 	uint32_t = 64
			maxPerStageDescriptorUniformBuffers: uint32_t = 200
			maxPerStageDescriptorStorageBuffers: uint32_t = 200
			maxPerStageDescriptorSampledImages: uint32_t = 200
			maxPerStageDescriptorStorageImages: uint32_t = 16
			maxPerStageDescriptorInputAttachments: uint32_t = 8
			maxPerStageResources: 			uint32_t = 200
			maxDescriptorSetSamplers: 		uint32_t = 384
			maxDescriptorSetUniformBuffers: uint32_t = 1200
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
			maxDescriptorSetStorageBuffers: uint32_t = 1200
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1200
			maxDescriptorSetStorageImages: 	uint32_t = 96
			maxDescriptorSetInputAttachments: uint32_t = 8
			maxVertexInputAttributes: 		uint32_t = 16
			maxVertexInputBindings: 		uint32_t = 16
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 4095
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4096
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 256
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 32768
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 65536
				maxComputeWorkGroupCount[1]: 	uint32_t = 65536
				maxComputeWorkGroupCount[2]: 	uint32_t = 65536
			maxComputeWorkGroupInvocations: uint32_t = 1024
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1024
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 16
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65535
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 32
			minStorageBufferOffsetAlignment: VkDeviceSize = 16
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 16384
			maxFramebufferHeight: 			uint32_t = 16384
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 83.333
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 0.125
				pointSizeRange[1]: 				float = 255.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0
				lineWidthRange[1]: 				float = 7.99219
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.0078125
			strictLines: 					VkBool32 = 0
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 16
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 16
			nonCoherentAtomSize: 			VkDeviceSize = 1
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 0

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = 000001987B73D6D0
		pPhysicalDevices[0]: 			VkPhysicalDevice = 000001987B5010C0
		pPhysicalDevices[1]: 			VkPhysicalDevice = 000001987B501150

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pPhysicalDeviceCount: 			uint32_t* = 2
	pPhysicalDevices: 				VkPhysicalDevice* = 000001987B73D950
		pPhysicalDevices[0]: 			VkPhysicalDevice = 000001987B5010C0
		pPhysicalDevices[1]: 			VkPhysicalDevice = 000001987B501150

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198484
		driverVersion: 					uint32_t = 1745387520
		vendorID: 						uint32_t = 4318
		deviceID: 						uint32_t = 7073
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1070 With Max-Q Design"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 22
			pipelineCacheUUID[1]: 			uint8_t = 251
			pipelineCacheUUID[2]: 			uint8_t = 4
			pipelineCacheUUID[3]: 			uint8_t = 71
			pipelineCacheUUID[4]: 			uint8_t = 81
			pipelineCacheUUID[5]: 			uint8_t = 92
			pipelineCacheUUID[6]: 			uint8_t = 9
			pipelineCacheUUID[7]: 			uint8_t = 112
			pipelineCacheUUID[8]: 			uint8_t = 47
			pipelineCacheUUID[9]: 			uint8_t = 144
			pipelineCacheUUID[10]: 			uint8_t = 239
			pipelineCacheUUID[11]: 			uint8_t = 11
			pipelineCacheUUID[12]: 			uint8_t = 57
			pipelineCacheUUID[13]: 			uint8_t = 94
			pipelineCacheUUID[14]: 			uint8_t = 208
			pipelineCacheUUID[15]: 			uint8_t = 19
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 32768
			maxImageDimension2D: 			uint32_t = 32768
			maxImageDimension3D: 			uint32_t = 16384
			maxImageDimensionCube: 			uint32_t = 32768
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 4294967295
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 4096
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1024
			sparseAddressSpaceSize: 		VkDeviceSize = 18446744073709551615
			maxBoundDescriptorSets: 		uint32_t = 32
			maxPerStageDescriptorSamplers: 	uint32_t = 1048576
			maxPerStageDescriptorUniformBuffers: uint32_t = 15
			maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
			maxPerStageDescriptorSampledImages: uint32_t = 1048576
			maxPerStageDescriptorStorageImages: uint32_t = 1048576
			maxPerStageDescriptorInputAttachments: uint32_t = 1048576
			maxPerStageResources: 			uint32_t = 4294967295
			maxDescriptorSetSamplers: 		uint32_t = 1048576
			maxDescriptorSetUniformBuffers: uint32_t = 90
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
			maxDescriptorSetStorageBuffers: uint32_t = 1048576
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1048576
			maxDescriptorSetStorageImages: 	uint32_t = 1048576
			maxDescriptorSetInputAttachments: uint32_t = 1048576
			maxVertexInputAttributes: 		uint32_t = 32
			maxVertexInputBindings: 		uint32_t = 32
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 2048
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4216
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 1024
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 49152
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 2147483647
				maxComputeWorkGroupCount[1]: 	uint32_t = 65535
				maxComputeWorkGroupCount[2]: 	uint32_t = 65535
			maxComputeWorkGroupInvocations: uint32_t = 1536
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1536
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 15
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65536
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 256
			minStorageBufferOffsetAlignment: VkDeviceSize = 32
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 32768
			maxFramebufferHeight: 			uint32_t = 32768
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 1
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 1
				pointSizeRange[1]: 				float = 189.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0.5
				lineWidthRange[1]: 				float = 10
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.125
			strictLines: 					VkBool32 = 1
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
			nonCoherentAtomSize: 			VkDeviceSize = 64
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198485
		driverVersion: 					uint32_t = 1644773
		vendorID: 						uint32_t = 32902
		deviceID: 						uint32_t = 16027
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 212
			pipelineCacheUUID[1]: 			uint8_t = 44
			pipelineCacheUUID[2]: 			uint8_t = 214
			pipelineCacheUUID[3]: 			uint8_t = 33
			pipelineCacheUUID[4]: 			uint8_t = 211
			pipelineCacheUUID[5]: 			uint8_t = 35
			pipelineCacheUUID[6]: 			uint8_t = 227
			pipelineCacheUUID[7]: 			uint8_t = 33
			pipelineCacheUUID[8]: 			uint8_t = 216
			pipelineCacheUUID[9]: 			uint8_t = 47
			pipelineCacheUUID[10]: 			uint8_t = 217
			pipelineCacheUUID[11]: 			uint8_t = 35
			pipelineCacheUUID[12]: 			uint8_t = 223
			pipelineCacheUUID[13]: 			uint8_t = 38
			pipelineCacheUUID[14]: 			uint8_t = 219
			pipelineCacheUUID[15]: 			uint8_t = 17
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 16384
			maxImageDimension2D: 			uint32_t = 16384
			maxImageDimension3D: 			uint32_t = 2048
			maxImageDimensionCube: 			uint32_t = 16384
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 134217728
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 3758817
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1
			sparseAddressSpaceSize: 		VkDeviceSize = 17592186044416
			maxBoundDescriptorSets: 		uint32_t = 8
			maxPerStageDescriptorSamplers: 	uint32_t = 64
			maxPerStageDescriptorUniformBuffers: uint32_t = 200
			maxPerStageDescriptorStorageBuffers: uint32_t = 200
			maxPerStageDescriptorSampledImages: uint32_t = 200
			maxPerStageDescriptorStorageImages: uint32_t = 16
			maxPerStageDescriptorInputAttachments: uint32_t = 8
			maxPerStageResources: 			uint32_t = 200
			maxDescriptorSetSamplers: 		uint32_t = 384
			maxDescriptorSetUniformBuffers: uint32_t = 1200
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
			maxDescriptorSetStorageBuffers: uint32_t = 1200
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1200
			maxDescriptorSetStorageImages: 	uint32_t = 96
			maxDescriptorSetInputAttachments: uint32_t = 8
			maxVertexInputAttributes: 		uint32_t = 16
			maxVertexInputBindings: 		uint32_t = 16
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 4095
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4096
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 256
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 32768
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 65536
				maxComputeWorkGroupCount[1]: 	uint32_t = 65536
				maxComputeWorkGroupCount[2]: 	uint32_t = 65536
			maxComputeWorkGroupInvocations: uint32_t = 1024
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1024
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 16
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65535
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 32
			minStorageBufferOffsetAlignment: VkDeviceSize = 16
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 16384
			maxFramebufferHeight: 			uint32_t = 16384
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 83.333
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 0.125
				pointSizeRange[1]: 				float = 255.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0
				lineWidthRange[1]: 				float = 7.99219
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.0078125
			strictLines: 					VkBool32 = 0
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 16
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 16
			nonCoherentAtomSize: 			VkDeviceSize = 1
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198484
		driverVersion: 					uint32_t = 1745387520
		vendorID: 						uint32_t = 4318
		deviceID: 						uint32_t = 7073
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1070 With Max-Q Design"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 22
			pipelineCacheUUID[1]: 			uint8_t = 251
			pipelineCacheUUID[2]: 			uint8_t = 4
			pipelineCacheUUID[3]: 			uint8_t = 71
			pipelineCacheUUID[4]: 			uint8_t = 81
			pipelineCacheUUID[5]: 			uint8_t = 92
			pipelineCacheUUID[6]: 			uint8_t = 9
			pipelineCacheUUID[7]: 			uint8_t = 112
			pipelineCacheUUID[8]: 			uint8_t = 47
			pipelineCacheUUID[9]: 			uint8_t = 144
			pipelineCacheUUID[10]: 			uint8_t = 239
			pipelineCacheUUID[11]: 			uint8_t = 11
			pipelineCacheUUID[12]: 			uint8_t = 57
			pipelineCacheUUID[13]: 			uint8_t = 94
			pipelineCacheUUID[14]: 			uint8_t = 208
			pipelineCacheUUID[15]: 			uint8_t = 19
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 32768
			maxImageDimension2D: 			uint32_t = 32768
			maxImageDimension3D: 			uint32_t = 16384
			maxImageDimensionCube: 			uint32_t = 32768
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 4294967295
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 4096
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1024
			sparseAddressSpaceSize: 		VkDeviceSize = 18446744073709551615
			maxBoundDescriptorSets: 		uint32_t = 32
			maxPerStageDescriptorSamplers: 	uint32_t = 1048576
			maxPerStageDescriptorUniformBuffers: uint32_t = 15
			maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
			maxPerStageDescriptorSampledImages: uint32_t = 1048576
			maxPerStageDescriptorStorageImages: uint32_t = 1048576
			maxPerStageDescriptorInputAttachments: uint32_t = 1048576
			maxPerStageResources: 			uint32_t = 4294967295
			maxDescriptorSetSamplers: 		uint32_t = 1048576
			maxDescriptorSetUniformBuffers: uint32_t = 90
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
			maxDescriptorSetStorageBuffers: uint32_t = 1048576
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1048576
			maxDescriptorSetStorageImages: 	uint32_t = 1048576
			maxDescriptorSetInputAttachments: uint32_t = 1048576
			maxVertexInputAttributes: 		uint32_t = 32
			maxVertexInputBindings: 		uint32_t = 32
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 2048
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4216
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 1024
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 49152
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 2147483647
				maxComputeWorkGroupCount[1]: 	uint32_t = 65535
				maxComputeWorkGroupCount[2]: 	uint32_t = 65535
			maxComputeWorkGroupInvocations: uint32_t = 1536
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1536
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 15
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65536
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 256
			minStorageBufferOffsetAlignment: VkDeviceSize = 32
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 32768
			maxFramebufferHeight: 			uint32_t = 32768
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 1
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 1
				pointSizeRange[1]: 				float = 189.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0.5
				lineWidthRange[1]: 				float = 10
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.125
			strictLines: 					VkBool32 = 1
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
			nonCoherentAtomSize: 			VkDeviceSize = 64
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE350:
		apiVersion: 					uint32_t = 4198485
		driverVersion: 					uint32_t = 1644773
		vendorID: 						uint32_t = 32902
		deviceID: 						uint32_t = 16027
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE464
			pipelineCacheUUID[0]: 			uint8_t = 212
			pipelineCacheUUID[1]: 			uint8_t = 44
			pipelineCacheUUID[2]: 			uint8_t = 214
			pipelineCacheUUID[3]: 			uint8_t = 33
			pipelineCacheUUID[4]: 			uint8_t = 211
			pipelineCacheUUID[5]: 			uint8_t = 35
			pipelineCacheUUID[6]: 			uint8_t = 227
			pipelineCacheUUID[7]: 			uint8_t = 33
			pipelineCacheUUID[8]: 			uint8_t = 216
			pipelineCacheUUID[9]: 			uint8_t = 47
			pipelineCacheUUID[10]: 			uint8_t = 217
			pipelineCacheUUID[11]: 			uint8_t = 35
			pipelineCacheUUID[12]: 			uint8_t = 223
			pipelineCacheUUID[13]: 			uint8_t = 38
			pipelineCacheUUID[14]: 			uint8_t = 219
			pipelineCacheUUID[15]: 			uint8_t = 17
		limits: 						VkPhysicalDeviceLimits = 00000093924FE478:
			maxImageDimension1D: 			uint32_t = 16384
			maxImageDimension2D: 			uint32_t = 16384
			maxImageDimension3D: 			uint32_t = 2048
			maxImageDimensionCube: 			uint32_t = 16384
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 134217728
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 3758817
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1
			sparseAddressSpaceSize: 		VkDeviceSize = 17592186044416
			maxBoundDescriptorSets: 		uint32_t = 8
			maxPerStageDescriptorSamplers: 	uint32_t = 64
			maxPerStageDescriptorUniformBuffers: uint32_t = 200
			maxPerStageDescriptorStorageBuffers: uint32_t = 200
			maxPerStageDescriptorSampledImages: uint32_t = 200
			maxPerStageDescriptorStorageImages: uint32_t = 16
			maxPerStageDescriptorInputAttachments: uint32_t = 8
			maxPerStageResources: 			uint32_t = 200
			maxDescriptorSetSamplers: 		uint32_t = 384
			maxDescriptorSetUniformBuffers: uint32_t = 1200
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
			maxDescriptorSetStorageBuffers: uint32_t = 1200
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1200
			maxDescriptorSetStorageImages: 	uint32_t = 96
			maxDescriptorSetInputAttachments: uint32_t = 8
			maxVertexInputAttributes: 		uint32_t = 16
			maxVertexInputBindings: 		uint32_t = 16
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 4095
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4096
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 256
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 32768
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FE554
				maxComputeWorkGroupCount[0]: 	uint32_t = 65536
				maxComputeWorkGroupCount[1]: 	uint32_t = 65536
				maxComputeWorkGroupCount[2]: 	uint32_t = 65536
			maxComputeWorkGroupInvocations: uint32_t = 1024
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FE564
				maxComputeWorkGroupSize[0]: 	uint32_t = 1024
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 16
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FE590
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FE598
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65535
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 32
			minStorageBufferOffsetAlignment: VkDeviceSize = 16
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 16384
			maxFramebufferHeight: 			uint32_t = 16384
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 83.333
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FE634
				pointSizeRange[0]: 				float = 0.125
				pointSizeRange[1]: 				float = 255.875
			lineWidthRange: 				float[2] = 00000093924FE63C
				lineWidthRange[0]: 				float = 0
				lineWidthRange[1]: 				float = 7.99219
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.0078125
			strictLines: 					VkBool32 = 0
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 16
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 16
			nonCoherentAtomSize: 			VkDeviceSize = 1
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FE670:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE8B0:
		apiVersion: 					uint32_t = 4198484
		driverVersion: 					uint32_t = 1745387520
		vendorID: 						uint32_t = 4318
		deviceID: 						uint32_t = 7073
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1070 With Max-Q Design"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE9C4
			pipelineCacheUUID[0]: 			uint8_t = 22
			pipelineCacheUUID[1]: 			uint8_t = 251
			pipelineCacheUUID[2]: 			uint8_t = 4
			pipelineCacheUUID[3]: 			uint8_t = 71
			pipelineCacheUUID[4]: 			uint8_t = 81
			pipelineCacheUUID[5]: 			uint8_t = 92
			pipelineCacheUUID[6]: 			uint8_t = 9
			pipelineCacheUUID[7]: 			uint8_t = 112
			pipelineCacheUUID[8]: 			uint8_t = 47
			pipelineCacheUUID[9]: 			uint8_t = 144
			pipelineCacheUUID[10]: 			uint8_t = 239
			pipelineCacheUUID[11]: 			uint8_t = 11
			pipelineCacheUUID[12]: 			uint8_t = 57
			pipelineCacheUUID[13]: 			uint8_t = 94
			pipelineCacheUUID[14]: 			uint8_t = 208
			pipelineCacheUUID[15]: 			uint8_t = 19
		limits: 						VkPhysicalDeviceLimits = 00000093924FE9D8:
			maxImageDimension1D: 			uint32_t = 32768
			maxImageDimension2D: 			uint32_t = 32768
			maxImageDimension3D: 			uint32_t = 16384
			maxImageDimensionCube: 			uint32_t = 32768
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 4294967295
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 4096
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1024
			sparseAddressSpaceSize: 		VkDeviceSize = 18446744073709551615
			maxBoundDescriptorSets: 		uint32_t = 32
			maxPerStageDescriptorSamplers: 	uint32_t = 1048576
			maxPerStageDescriptorUniformBuffers: uint32_t = 15
			maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
			maxPerStageDescriptorSampledImages: uint32_t = 1048576
			maxPerStageDescriptorStorageImages: uint32_t = 1048576
			maxPerStageDescriptorInputAttachments: uint32_t = 1048576
			maxPerStageResources: 			uint32_t = 4294967295
			maxDescriptorSetSamplers: 		uint32_t = 1048576
			maxDescriptorSetUniformBuffers: uint32_t = 90
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
			maxDescriptorSetStorageBuffers: uint32_t = 1048576
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1048576
			maxDescriptorSetStorageImages: 	uint32_t = 1048576
			maxDescriptorSetInputAttachments: uint32_t = 1048576
			maxVertexInputAttributes: 		uint32_t = 32
			maxVertexInputBindings: 		uint32_t = 32
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 2048
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4216
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 1024
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 49152
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FEAB4
				maxComputeWorkGroupCount[0]: 	uint32_t = 2147483647
				maxComputeWorkGroupCount[1]: 	uint32_t = 65535
				maxComputeWorkGroupCount[2]: 	uint32_t = 65535
			maxComputeWorkGroupInvocations: uint32_t = 1536
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FEAC4
				maxComputeWorkGroupSize[0]: 	uint32_t = 1536
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 15
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FEAF0
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FEAF8
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65536
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 256
			minStorageBufferOffsetAlignment: VkDeviceSize = 32
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 32768
			maxFramebufferHeight: 			uint32_t = 32768
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 1
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FEB94
				pointSizeRange[0]: 				float = 1
				pointSizeRange[1]: 				float = 189.875
			lineWidthRange: 				float[2] = 00000093924FEB9C
				lineWidthRange[0]: 				float = 0.5
				lineWidthRange[1]: 				float = 10
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.125
			strictLines: 					VkBool32 = 1
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
			nonCoherentAtomSize: 			VkDeviceSize = 64
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FEBD0:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pQueueFamilyPropertyCount: 		uint32_t* = 3
	pQueueFamilyProperties: 		VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pQueueFamilyPropertyCount: 		uint32_t* = 3
	pQueueFamilyProperties: 		VkQueueFamilyProperties* = 000001987B311670
		pQueueFamilyProperties[0]: 		VkQueueFamilyProperties = 000001987B311670:
			queueFlags: 					VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
			queueCount: 					uint32_t = 16
			timestampValidBits: 			uint32_t = 64
			minImageTransferGranularity: 	VkExtent3D = 000001987B31167C:
				width: 							uint32_t = 1
				height: 						uint32_t = 1
				depth: 							uint32_t = 1
		pQueueFamilyProperties[1]: 		VkQueueFamilyProperties = 000001987B311688:
			queueFlags: 					VkQueueFlags = 4 (VK_QUEUE_TRANSFER_BIT)
			queueCount: 					uint32_t = 1
			timestampValidBits: 			uint32_t = 64
			minImageTransferGranularity: 	VkExtent3D = 000001987B311694:
				width: 							uint32_t = 1
				height: 						uint32_t = 1
				depth: 							uint32_t = 1
		pQueueFamilyProperties[2]: 		VkQueueFamilyProperties = 000001987B3116A0:
			queueFlags: 					VkQueueFlags = 2 (VK_QUEUE_COMPUTE_BIT)
			queueCount: 					uint32_t = 8
			timestampValidBits: 			uint32_t = 64
			minImageTransferGranularity: 	VkExtent3D = 000001987B3116AC:
				width: 							uint32_t = 1
				height: 						uint32_t = 1
				depth: 							uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceWin32PresentationSupportKHR(physicalDevice, queueFamilyIndex) returns VkBool32 1:
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	queueFamilyIndex: 				uint32_t = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pProperties: 					VkPhysicalDeviceProperties* = 00000093924FE8B0:
		apiVersion: 					uint32_t = 4198485
		driverVersion: 					uint32_t = 1644773
		vendorID: 						uint32_t = 32902
		deviceID: 						uint32_t = 16027
		deviceType: 					VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
		deviceName: 					char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630"
		pipelineCacheUUID: 				uint8_t[VK_UUID_SIZE] = 00000093924FE9C4
			pipelineCacheUUID[0]: 			uint8_t = 212
			pipelineCacheUUID[1]: 			uint8_t = 44
			pipelineCacheUUID[2]: 			uint8_t = 214
			pipelineCacheUUID[3]: 			uint8_t = 33
			pipelineCacheUUID[4]: 			uint8_t = 211
			pipelineCacheUUID[5]: 			uint8_t = 35
			pipelineCacheUUID[6]: 			uint8_t = 227
			pipelineCacheUUID[7]: 			uint8_t = 33
			pipelineCacheUUID[8]: 			uint8_t = 216
			pipelineCacheUUID[9]: 			uint8_t = 47
			pipelineCacheUUID[10]: 			uint8_t = 217
			pipelineCacheUUID[11]: 			uint8_t = 35
			pipelineCacheUUID[12]: 			uint8_t = 223
			pipelineCacheUUID[13]: 			uint8_t = 38
			pipelineCacheUUID[14]: 			uint8_t = 219
			pipelineCacheUUID[15]: 			uint8_t = 17
		limits: 						VkPhysicalDeviceLimits = 00000093924FE9D8:
			maxImageDimension1D: 			uint32_t = 16384
			maxImageDimension2D: 			uint32_t = 16384
			maxImageDimension3D: 			uint32_t = 2048
			maxImageDimensionCube: 			uint32_t = 16384
			maxImageArrayLayers: 			uint32_t = 2048
			maxTexelBufferElements: 		uint32_t = 134217728
			maxUniformBufferRange: 			uint32_t = 65536
			maxStorageBufferRange: 			uint32_t = 134217728
			maxPushConstantsSize: 			uint32_t = 256
			maxMemoryAllocationCount: 		uint32_t = 3758817
			maxSamplerAllocationCount: 		uint32_t = 4000
			bufferImageGranularity: 		VkDeviceSize = 1
			sparseAddressSpaceSize: 		VkDeviceSize = 17592186044416
			maxBoundDescriptorSets: 		uint32_t = 8
			maxPerStageDescriptorSamplers: 	uint32_t = 64
			maxPerStageDescriptorUniformBuffers: uint32_t = 200
			maxPerStageDescriptorStorageBuffers: uint32_t = 200
			maxPerStageDescriptorSampledImages: uint32_t = 200
			maxPerStageDescriptorStorageImages: uint32_t = 16
			maxPerStageDescriptorInputAttachments: uint32_t = 8
			maxPerStageResources: 			uint32_t = 200
			maxDescriptorSetSamplers: 		uint32_t = 384
			maxDescriptorSetUniformBuffers: uint32_t = 1200
			maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
			maxDescriptorSetStorageBuffers: uint32_t = 1200
			maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
			maxDescriptorSetSampledImages: 	uint32_t = 1200
			maxDescriptorSetStorageImages: 	uint32_t = 96
			maxDescriptorSetInputAttachments: uint32_t = 8
			maxVertexInputAttributes: 		uint32_t = 16
			maxVertexInputBindings: 		uint32_t = 16
			maxVertexInputAttributeOffset: 	uint32_t = 2047
			maxVertexInputBindingStride: 	uint32_t = 4095
			maxVertexOutputComponents: 		uint32_t = 128
			maxTessellationGenerationLevel: uint32_t = 64
			maxTessellationPatchSize: 		uint32_t = 32
			maxTessellationControlPerVertexInputComponents: uint32_t = 128
			maxTessellationControlPerVertexOutputComponents: uint32_t = 128
			maxTessellationControlPerPatchOutputComponents: uint32_t = 120
			maxTessellationControlTotalOutputComponents: uint32_t = 4096
			maxTessellationEvaluationInputComponents: uint32_t = 128
			maxTessellationEvaluationOutputComponents: uint32_t = 128
			maxGeometryShaderInvocations: 	uint32_t = 32
			maxGeometryInputComponents: 	uint32_t = 128
			maxGeometryOutputComponents: 	uint32_t = 128
			maxGeometryOutputVertices: 		uint32_t = 256
			maxGeometryTotalOutputComponents: uint32_t = 1024
			maxFragmentInputComponents: 	uint32_t = 128
			maxFragmentOutputAttachments: 	uint32_t = 8
			maxFragmentDualSrcAttachments: 	uint32_t = 1
			maxFragmentCombinedOutputResources: uint32_t = 16
			maxComputeSharedMemorySize: 	uint32_t = 32768
			maxComputeWorkGroupCount: 		uint32_t[3] = 00000093924FEAB4
				maxComputeWorkGroupCount[0]: 	uint32_t = 65536
				maxComputeWorkGroupCount[1]: 	uint32_t = 65536
				maxComputeWorkGroupCount[2]: 	uint32_t = 65536
			maxComputeWorkGroupInvocations: uint32_t = 1024
			maxComputeWorkGroupSize: 		uint32_t[3] = 00000093924FEAC4
				maxComputeWorkGroupSize[0]: 	uint32_t = 1024
				maxComputeWorkGroupSize[1]: 	uint32_t = 1024
				maxComputeWorkGroupSize[2]: 	uint32_t = 64
			subPixelPrecisionBits: 			uint32_t = 8
			subTexelPrecisionBits: 			uint32_t = 8
			mipmapPrecisionBits: 			uint32_t = 8
			maxDrawIndexedIndexValue: 		uint32_t = 4294967295
			maxDrawIndirectCount: 			uint32_t = 4294967295
			maxSamplerLodBias: 				float = 16
			maxSamplerAnisotropy: 			float = 16
			maxViewports: 					uint32_t = 16
			maxViewportDimensions: 			uint32_t[2] = 00000093924FEAF0
				maxViewportDimensions[0]: 		uint32_t = 32768
				maxViewportDimensions[1]: 		uint32_t = 32768
			viewportBoundsRange: 			float[2] = 00000093924FEAF8
				viewportBoundsRange[0]: 		float = -65536
				viewportBoundsRange[1]: 		float = 65535
			viewportSubPixelBits: 			uint32_t = 8
			minMemoryMapAlignment: 			size_t = 64
			minTexelBufferOffsetAlignment: 	VkDeviceSize = 16
			minUniformBufferOffsetAlignment: VkDeviceSize = 32
			minStorageBufferOffsetAlignment: VkDeviceSize = 16
			minTexelOffset: 				int32_t = -8
			maxTexelOffset: 				uint32_t = 7
			minTexelGatherOffset: 			int32_t = -32
			maxTexelGatherOffset: 			uint32_t = 31
			minInterpolationOffset: 		float = -0.5
			maxInterpolationOffset: 		float = 0.4375
			subPixelInterpolationOffsetBits: uint32_t = 4
			maxFramebufferWidth: 			uint32_t = 16384
			maxFramebufferHeight: 			uint32_t = 16384
			maxFramebufferLayers: 			uint32_t = 2048
			framebufferColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxColorAttachments: 			uint32_t = 8
			sampledImageColorSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageDepthSampleCounts: 	VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			storageImageSampleCounts: 		VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
			maxSampleMaskWords: 			uint32_t = 1
			timestampComputeAndGraphics: 	VkBool32 = 1
			timestampPeriod: 				float = 83.333
			maxClipDistances: 				uint32_t = 8
			maxCullDistances: 				uint32_t = 8
			maxCombinedClipAndCullDistances: uint32_t = 8
			discreteQueuePriorities: 		uint32_t = 2
			pointSizeRange: 				float[2] = 00000093924FEB94
				pointSizeRange[0]: 				float = 0.125
				pointSizeRange[1]: 				float = 255.875
			lineWidthRange: 				float[2] = 00000093924FEB9C
				lineWidthRange[0]: 				float = 0
				lineWidthRange[1]: 				float = 7.99219
			pointSizeGranularity: 			float = 0.125
			lineWidthGranularity: 			float = 0.0078125
			strictLines: 					VkBool32 = 0
			standardSampleLocations: 		VkBool32 = 1
			optimalBufferCopyOffsetAlignment: VkDeviceSize = 16
			optimalBufferCopyRowPitchAlignment: VkDeviceSize = 16
			nonCoherentAtomSize: 			VkDeviceSize = 1
		sparseProperties: 				VkPhysicalDeviceSparseProperties = 00000093924FEBD0:
			residencyStandard2DBlockShape: 	VkBool32 = 1
			residencyStandard2DMultisampleBlockShape: VkBool32 = 1
			residencyStandard3DBlockShape: 	VkBool32 = 1
			residencyAlignedMipSize: 		VkBool32 = 0
			residencyNonResidentStrict: 	VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pQueueFamilyPropertyCount: 		uint32_t* = 1
	pQueueFamilyProperties: 		VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	pQueueFamilyPropertyCount: 		uint32_t* = 1
	pQueueFamilyProperties: 		VkQueueFamilyProperties* = 000001987AD72440
		pQueueFamilyProperties[0]: 		VkQueueFamilyProperties = 000001987AD72440:
			queueFlags: 					VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
			queueCount: 					uint32_t = 1
			timestampValidBits: 			uint32_t = 36
			minImageTransferGranularity: 	VkExtent3D = 000001987AD7244C:
				width: 							uint32_t = 1
				height: 						uint32_t = 1
				depth: 							uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceWin32PresentationSupportKHR(physicalDevice, queueFamilyIndex) returns VkBool32 1:
	physicalDevice: 				VkPhysicalDevice = 000001987B501150
	queueFamilyIndex: 				uint32_t = 0

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	pCreateInfo: 					const VkDeviceCreateInfo* = 00000093924FEC20:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
		pNext: 							const void* = 00000093924FEBF8
		flags: 							VkDeviceCreateFlags = 0
		queueCreateInfoCount: 			uint32_t = 3
		pQueueCreateInfos: 				const VkDeviceQueueCreateInfo* = 000001987B742BC0
			pQueueCreateInfos[0]: 			const VkDeviceQueueCreateInfo = 000001987B742BC0:
				sType: 							VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
				pNext: 							const void* = NULL
				flags: 							VkDeviceQueueCreateFlags = 0
				queueFamilyIndex: 				uint32_t = 0
				queueCount: 					uint32_t = 1
				pQueuePriorities: 				const float* = 00000093924FEDB4
					pQueuePriorities[0]: 			const float = 1
			pQueueCreateInfos[1]: 			const VkDeviceQueueCreateInfo = 000001987B742BE8:
				sType: 							VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
				pNext: 							const void* = NULL
				flags: 							VkDeviceQueueCreateFlags = 0
				queueFamilyIndex: 				uint32_t = 2
				queueCount: 					uint32_t = 1
				pQueuePriorities: 				const float* = 00000093924FEDB4
					pQueuePriorities[0]: 			const float = 1
			pQueueCreateInfos[2]: 			const VkDeviceQueueCreateInfo = 000001987B742C10:
				sType: 							VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
				pNext: 							const void* = NULL
				flags: 							VkDeviceQueueCreateFlags = 0
				queueFamilyIndex: 				uint32_t = 1
				queueCount: 					uint32_t = 1
				pQueuePriorities: 				const float* = 00000093924FEDB4
					pQueuePriorities[0]: 			const float = 1
		enabledLayerCount: 				uint32_t = 0
		ppEnabledLayerNames: 			const char* const* = NULL
		enabledExtensionCount: 			uint32_t = 1
		ppEnabledExtensionNames: 		const char* const* = 000001987AE56060
			ppEnabledExtensionNames[0]: 	const char* const = "VK_KHR_swapchain"
		pEnabledFeatures: 				const VkPhysicalDeviceFeatures* = NULL
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pDevice: 						VkDevice* = 000001987B7535F0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
	device: 						VkDevice = 000001987B7535F0
	queueFamilyIndex: 				uint32_t = 0
	queueIndex: 					uint32_t = 0
	pQueue: 						VkQueue* = 000001987ADE40E0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
	device: 						VkDevice = 000001987B7535F0
	queueFamilyIndex: 				uint32_t = 1
	queueIndex: 					uint32_t = 0
	pQueue: 						VkQueue* = 000001987ADE2DA0

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
	device: 						VkDevice = 000001987B7535F0
	queueFamilyIndex: 				uint32_t = 2
	queueIndex: 					uint32_t = 0
	pQueue: 						VkQueue* = 000001987ADE4660

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
	device: 						VkDevice = 000001987B7535F0
	queueFamilyIndex: 				uint32_t = 0
	queueIndex: 					uint32_t = 0
	pQueue: 						VkQueue* = 000001987ADE40E0

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkCommandPoolCreateInfo* = 00000093924FEC28:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
		pNext: 							const void* = NULL
		flags: 							VkCommandPoolCreateFlags = 0
		queueFamilyIndex: 				uint32_t = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pCommandPool: 					VkCommandPool* = 0000000000000001

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkCommandPoolCreateInfo* = 00000093924FEC28:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
		pNext: 							const void* = NULL
		flags: 							VkCommandPoolCreateFlags = 0
		queueFamilyIndex: 				uint32_t = 2
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pCommandPool: 					VkCommandPool* = 0000000000000002

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkCommandPoolCreateInfo* = 00000093924FEC28:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
		pNext: 							const void* = NULL
		flags: 							VkCommandPoolCreateFlags = 0
		queueFamilyIndex: 				uint32_t = 1
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pCommandPool: 					VkCommandPool* = 0000000000000003

Thread 0, Frame 0:
vkCreateWin32SurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
	instance: 						VkInstance = 0000019879BF0D00
	pCreateInfo: 					const VkWin32SurfaceCreateInfoKHR* = 00000093924FEE98:
		sType: 							VkStructureType = UNKNOWN (1000009000)
		pNext: 							const void* = NULL
		flags: 							VkWin32SurfaceCreateFlagsKHR = 0
		hinstance: 						HINSTANCE = 00007FF67F550000
		hwnd: 							HWND = 0000000000050604
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pSurface: 						VkSurfaceKHR* = 0000000000000004

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	queueFamilyIndex: 				uint32_t = 0
	surface: 						VkSurfaceKHR = 0000000000000004
	pSupported: 					VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	surface: 						VkSurfaceKHR = 0000000000000004
	pSurfaceFormatCount: 			uint32_t* = 2
	pSurfaceFormats: 				VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	surface: 						VkSurfaceKHR = 0000000000000004
	pSurfaceFormatCount: 			uint32_t* = 2
	pSurfaceFormats: 				VkSurfaceFormatKHR* = 000001987AE558E0
		pSurfaceFormats[0]: 			VkSurfaceFormatKHR = 000001987AE558E0:
			format: 						VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
			colorSpace: 					VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
		pSurfaceFormats[1]: 			VkSurfaceFormatKHR = 000001987AE558E8:
			format: 						VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
			colorSpace: 					VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	surface: 						VkSurfaceKHR = 0000000000000004
	pSurfaceCapabilities: 			VkSurfaceCapabilitiesKHR* = 00007FF67F619C84:
		minImageCount: 					uint32_t = 2
		maxImageCount: 					uint32_t = 8
		currentExtent: 					VkExtent2D = 00007FF67F619C8C:
			width: 							uint32_t = 1280
			height: 						uint32_t = 720
		minImageExtent: 				VkExtent2D = 00007FF67F619C94:
			width: 							uint32_t = 1280
			height: 						uint32_t = 720
		maxImageExtent: 				VkExtent2D = 00007FF67F619C9C:
			width: 							uint32_t = 1280
			height: 						uint32_t = 720
		maxImageArrayLayers: 			uint32_t = 1
		supportedTransforms: 			VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
		currentTransform: 				VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
		supportedCompositeAlpha: 		VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
		supportedUsageFlags: 			VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkSemaphoreCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
		pNext: 							const void* = NULL
		flags: 							VkSemaphoreCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pSemaphore: 					VkSemaphore* = 0000000000000005

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkSemaphoreCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
		pNext: 							const void* = NULL
		flags: 							VkSemaphoreCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pSemaphore: 					VkSemaphore* = 0000000000000006

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	surface: 						VkSurfaceKHR = 0000000000000004
	pPresentModeCount: 				uint32_t* = 3
	pPresentModes: 					VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
	physicalDevice: 				VkPhysicalDevice = 000001987B5010C0
	surface: 						VkSurfaceKHR = 0000000000000004
	pPresentModeCount: 				uint32_t* = 3
	pPresentModes: 					VkPresentModeKHR* = 000001987AE55700
		pPresentModes[0]: 				VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
		pPresentModes[1]: 				VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)
		pPresentModes[2]: 				VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkSwapchainCreateInfoKHR* = 00000093924FEF40:
		sType: 							VkStructureType = UNKNOWN (1000001000)
		pNext: 							const void* = NULL
		flags: 							VkSwapchainCreateFlagsKHR = 0
		surface: 						VkSurfaceKHR = 0000000000000004
		minImageCount: 					uint32_t = 2
		imageFormat: 					VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
		imageColorSpace: 				VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
		imageExtent: 					VkExtent2D = 00000093924FEF6C:
			width: 							uint32_t = 1280
			height: 						uint32_t = 720
		imageArrayLayers: 				uint32_t = 1
		imageUsage: 					VkImageUsageFlags = 22 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
		imageSharingMode: 				VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
		queueFamilyIndexCount: 			uint32_t = 1
		pQueueFamilyIndices: 			const uint32_t* = UNUSED
		preTransform: 					VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
		compositeAlpha: 				VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
		presentMode: 					VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
		clipped: 						VkBool32 = 0
		oldSwapchain: 					VkSwapchainKHR = 0000000000000000
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pSwapchain: 					VkSwapchainKHR* = 0000000000000007

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	pSwapchainImageCount: 			uint32_t* = 2
	pSwapchainImages: 				VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	pSwapchainImageCount: 			uint32_t* = 2
	pSwapchainImages: 				VkImage* = 000001987AE55E80
		pSwapchainImages[0]: 			VkImage = 0000000000000008
		pSwapchainImages[1]: 			VkImage = 0000000000000009

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkImageViewCreateInfo* = 00000093924FEDA0:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
		pNext: 							const void* = NULL
		flags: 							VkImageViewCreateFlags = 0
		image: 							VkImage = 0000000000000008
		viewType: 						VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
		format: 						VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
		components: 					VkComponentMapping = 00000093924FEDC8:
			r: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			g: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			b: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			a: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
		subresourceRange: 				VkImageSubresourceRange = 00000093924FEDD8:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pView: 							VkImageView* = 000000000000000A

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkImageViewCreateInfo* = 00000093924FEDA0:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
		pNext: 							const void* = NULL
		flags: 							VkImageViewCreateFlags = 0
		image: 							VkImage = 0000000000000009
		viewType: 						VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
		format: 						VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
		components: 					VkComponentMapping = 00000093924FEDC8:
			r: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			g: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			b: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
			a: 								VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
		subresourceRange: 				VkImageSubresourceRange = 00000093924FEDD8:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pView: 							VkImageView* = 000000000000000B

Thread 0, Frame 0:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 0:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 0:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 0:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800C91920

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000000C

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800C91920
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800C91920
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 0:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800C91920
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0249974
			float32[2]: 					float = 0.999687
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1020053335
			int32[2]: 						int32_t = 1065347973
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1020053335
			uint32[2]: 						uint32_t = 1065347973
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800C91920
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800C91920

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001987ADAFFB8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800C91920
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000000C

Thread 0, Frame 0:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 1:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987ADAFFA0
		pFences[0]: 					const VkFence = 000000000000000C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 1:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000000C

Thread 0, Frame 1:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987ADAFFA0
		pFences[0]: 					const VkFence = 000000000000000C

Thread 0, Frame 1:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 1:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 1:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 1:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 1:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E209E0

Thread 0, Frame 1:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000000D

Thread 0, Frame 1:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E209E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 1:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E209E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 1:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E209E0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0499792
			float32[2]: 					float = 0.99875
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1028437749
			int32[2]: 						int32_t = 1065332249
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1028437749
			uint32[2]: 						uint32_t = 1065332249
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 1:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E209E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 1:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E209E0

Thread 0, Frame 1:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001987B314290
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E209E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000000D

Thread 0, Frame 1:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 2:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B314278
		pFences[0]: 					const VkFence = 000000000000000D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 2:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000000D

Thread 0, Frame 2:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B314278
		pFences[0]: 					const VkFence = 000000000000000D

Thread 0, Frame 2:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 2:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 2:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 2:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 2:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E22540

Thread 0, Frame 2:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000000E

Thread 0, Frame 2:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E22540
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 2:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E22540
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 2:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E22540
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0749297
			float32[2]: 					float = 0.997189
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1033467071
			int32[2]: 						int32_t = 1065306052
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1033467071
			uint32[2]: 						uint32_t = 1065306052
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 2:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E22540
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 2:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E22540

Thread 0, Frame 2:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800C5DD38
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E22540
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000000E

Thread 0, Frame 2:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 3:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800C5DD20
		pFences[0]: 					const VkFence = 000000000000000E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 3:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000000E

Thread 0, Frame 3:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800C5DD20
		pFences[0]: 					const VkFence = 000000000000000E

Thread 0, Frame 3:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 3:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 3:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 3:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 3:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E23930

Thread 0, Frame 3:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000000F

Thread 0, Frame 3:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E23930
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 3:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E23930
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 3:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E23930
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0998334
			float32[2]: 					float = 0.995004
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1036809591
			int32[2]: 						int32_t = 1065269400
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1036809591
			uint32[2]: 						uint32_t = 1065269400
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 3:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E23930
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 3:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E23930

Thread 0, Frame 3:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001987B47F7E0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E23930
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000000F

Thread 0, Frame 3:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 4:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B47F7C8
		pFences[0]: 					const VkFence = 000000000000000F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 4:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000000F

Thread 0, Frame 4:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B47F7C8
		pFences[0]: 					const VkFence = 000000000000000F

Thread 0, Frame 4:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 4:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 4:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 4:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 4:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E28D30

Thread 0, Frame 4:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000010

Thread 0, Frame 4:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E28D30
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 4:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E28D30
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 4:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E28D30
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.124675
			float32[2]: 					float = 0.992198
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1040143735
			int32[2]: 						int32_t = 1065222315
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1040143735
			uint32[2]: 						uint32_t = 1065222315
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 4:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E28D30
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 4:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E28D30

Thread 0, Frame 4:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001987B4620B8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E28D30
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000010

Thread 0, Frame 4:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 5:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B4620A0
		pFences[0]: 					const VkFence = 0000000000000010
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 5:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000010

Thread 0, Frame 5:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B4620A0
		pFences[0]: 					const VkFence = 0000000000000010

Thread 0, Frame 5:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 5:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 5:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 5:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 5:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E2E130

Thread 0, Frame 5:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000011

Thread 0, Frame 5:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E2E130
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 5:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2E130
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 5:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2E130
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.149438
			float32[2]: 					float = 0.988771
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1041827408
			int32[2]: 						int32_t = 1065164826
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1041827408
			uint32[2]: 						uint32_t = 1065164826
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 5:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2E130
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 5:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E2E130

Thread 0, Frame 5:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001987B4620E0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E2E130
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000011

Thread 0, Frame 5:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 6:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B4620C8
		pFences[0]: 					const VkFence = 0000000000000011
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 6:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000011

Thread 0, Frame 6:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001987B4620C8
		pFences[0]: 					const VkFence = 0000000000000011

Thread 0, Frame 6:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 6:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 6:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 6:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 6:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E2F520

Thread 0, Frame 6:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000012

Thread 0, Frame 6:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E2F520
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 6:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2F520
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 6:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2F520
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.174108
			float32[2]: 					float = 0.984727
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1043482984
			int32[2]: 						int32_t = 1065096970
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1043482984
			uint32[2]: 						uint32_t = 1065096970
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 6:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E2F520
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 6:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E2F520

Thread 0, Frame 6:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019879F752D8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E2F520
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000012

Thread 0, Frame 6:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 7:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F752C0
		pFences[0]: 					const VkFence = 0000000000000012
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 7:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000012

Thread 0, Frame 7:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F752C0
		pFences[0]: 					const VkFence = 0000000000000012

Thread 0, Frame 7:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 7:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 7:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 7:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 7:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E30910

Thread 0, Frame 7:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000013

Thread 0, Frame 7:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E30910
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 7:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E30910
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 7:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E30910
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.198669
			float32[2]: 					float = 0.980067
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1045131258
			int32[2]: 						int32_t = 1065018789
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1045131258
			uint32[2]: 						uint32_t = 1065018789
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 7:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E30910
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 7:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E30910

Thread 0, Frame 7:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019879F75300
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E30910
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000013

Thread 0, Frame 7:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 8:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F752E8
		pFences[0]: 					const VkFence = 0000000000000013
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 8:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000013

Thread 0, Frame 8:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F752E8
		pFences[0]: 					const VkFence = 0000000000000013

Thread 0, Frame 8:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 8:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 8:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 8:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 8:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E31D00

Thread 0, Frame 8:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000014

Thread 0, Frame 8:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E31D00
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 8:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E31D00
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 8:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E31D00
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.223106
			float32[2]: 					float = 0.974794
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1046771200
			int32[2]: 						int32_t = 1064930331
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1046771200
			uint32[2]: 						uint32_t = 1064930331
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 8:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E31D00
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 8:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E31D00

Thread 0, Frame 8:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019879F75328
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E31D00
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000014

Thread 0, Frame 8:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 9:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F75310
		pFences[0]: 					const VkFence = 0000000000000014
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 9:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000014

Thread 0, Frame 9:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019879F75310
		pFences[0]: 					const VkFence = 0000000000000014

Thread 0, Frame 9:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 9:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 9:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 9:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 9:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E38A80

Thread 0, Frame 9:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000015

Thread 0, Frame 9:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E38A80
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 9:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E38A80
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 9:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E38A80
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.247404
			float32[2]: 					float = 0.968912
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1048401785
			int32[2]: 						int32_t = 1064831653
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1048401785
			uint32[2]: 						uint32_t = 1064831653
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 9:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E38A80
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 9:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E38A80

Thread 0, Frame 9:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800D4DAD0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E38A80
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000015

Thread 0, Frame 9:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 10:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DAB8
		pFences[0]: 					const VkFence = 0000000000000015
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 10:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000015

Thread 0, Frame 10:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DAB8
		pFences[0]: 					const VkFence = 0000000000000015

Thread 0, Frame 10:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 10:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 10:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 10:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 10:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E39E70

Thread 0, Frame 10:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000016

Thread 0, Frame 10:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E39E70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 10:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E39E70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 10:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E39E70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.271547
			float32[2]: 					float = 0.962425
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1049298996
			int32[2]: 						int32_t = 1064722815
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1049298996
			uint32[2]: 						uint32_t = 1064722815
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 10:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E39E70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 10:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E39E70

Thread 0, Frame 10:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800D4DAF8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E39E70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000016

Thread 0, Frame 10:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 11:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DAE0
		pFences[0]: 					const VkFence = 0000000000000016
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 11:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000016

Thread 0, Frame 11:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DAE0
		pFences[0]: 					const VkFence = 0000000000000016

Thread 0, Frame 11:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 11:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 11:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 11:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 11:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E3B260

Thread 0, Frame 11:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000017

Thread 0, Frame 11:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3B260
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 11:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3B260
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 11:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3B260
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.29552
			float32[2]: 					float = 0.955336
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1050103406
			int32[2]: 						int32_t = 1064603886
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1050103406
			uint32[2]: 						uint32_t = 1064603886
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 11:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3B260
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 11:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3B260

Thread 0, Frame 11:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800D4DB20
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E3B260
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000017

Thread 0, Frame 11:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 12:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DB08
		pFences[0]: 					const VkFence = 0000000000000017
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 12:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000017

Thread 0, Frame 12:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DB08
		pFences[0]: 					const VkFence = 0000000000000017

Thread 0, Frame 12:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 12:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 12:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 12:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 12:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E3E660

Thread 0, Frame 12:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000018

Thread 0, Frame 12:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3E660
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 12:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3E660
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 12:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3E660
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.319309
			float32[2]: 					float = 0.947651
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1050901618
			int32[2]: 						int32_t = 1064474941
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1050901618
			uint32[2]: 						uint32_t = 1064474941
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 12:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3E660
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 12:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3E660

Thread 0, Frame 12:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800D4DB48
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E3E660
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000018

Thread 0, Frame 12:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 13:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DB30
		pFences[0]: 					const VkFence = 0000000000000018
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 13:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000018

Thread 0, Frame 13:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800D4DB30
		pFences[0]: 					const VkFence = 0000000000000018

Thread 0, Frame 13:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 13:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 13:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 13:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 13:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E3FA50

Thread 0, Frame 13:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000019

Thread 0, Frame 13:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3FA50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 13:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3FA50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 13:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3FA50
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.342898
			float32[2]: 					float = 0.939373
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1051693135
			int32[2]: 						int32_t = 1064336059
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1051693135
			uint32[2]: 						uint32_t = 1064336059
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 13:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E3FA50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 13:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E3FA50

Thread 0, Frame 13:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E43050
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E3FA50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000019

Thread 0, Frame 13:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 14:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43038
		pFences[0]: 					const VkFence = 0000000000000019
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 14:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000019

Thread 0, Frame 14:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43038
		pFences[0]: 					const VkFence = 0000000000000019

Thread 0, Frame 14:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 14:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 14:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 14:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 14:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E43190

Thread 0, Frame 14:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001A

Thread 0, Frame 14:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E43190
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 14:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E43190
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 14:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E43190
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.366273
			float32[2]: 					float = 0.930508
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1052477461
			int32[2]: 						int32_t = 1064187327
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1052477461
			uint32[2]: 						uint32_t = 1064187327
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 14:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E43190
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 14:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E43190

Thread 0, Frame 14:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E43078
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E43190
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001A

Thread 0, Frame 14:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 15:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43060
		pFences[0]: 					const VkFence = 000000000000001A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 15:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001A

Thread 0, Frame 15:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43060
		pFences[0]: 					const VkFence = 000000000000001A

Thread 0, Frame 15:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 15:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 15:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 15:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 15:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E48590

Thread 0, Frame 15:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001B

Thread 0, Frame 15:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E48590
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 15:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E48590
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 15:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E48590
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.389418
			float32[2]: 					float = 0.921061
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1053254105
			int32[2]: 						int32_t = 1064028839
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1053254105
			uint32[2]: 						uint32_t = 1064028839
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 15:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E48590
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 15:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E48590

Thread 0, Frame 15:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E430A0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E48590
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001B

Thread 0, Frame 15:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 16:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43088
		pFences[0]: 					const VkFence = 000000000000001B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 16:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001B

Thread 0, Frame 16:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43088
		pFences[0]: 					const VkFence = 000000000000001B

Thread 0, Frame 16:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 16:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 16:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 16:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 16:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E49980

Thread 0, Frame 16:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001C

Thread 0, Frame 16:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E49980
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 16:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E49980
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 16:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E49980
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.412321
			float32[2]: 					float = 0.911039
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1054022584
			int32[2]: 						int32_t = 1063860693
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1054022584
			uint32[2]: 						uint32_t = 1063860693
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 16:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E49980
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 16:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E49980

Thread 0, Frame 16:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E430C8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E49980
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001C

Thread 0, Frame 16:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 17:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E430B0
		pFences[0]: 					const VkFence = 000000000000001C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 17:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001C

Thread 0, Frame 17:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E430B0
		pFences[0]: 					const VkFence = 000000000000001C

Thread 0, Frame 17:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 17:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 17:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 17:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 17:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E508F0

Thread 0, Frame 17:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001D

Thread 0, Frame 17:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E508F0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 17:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E508F0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 17:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E508F0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.434966
			float32[2]: 					float = 0.900447
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1054782416
			int32[2]: 						int32_t = 1063682995
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1054782416
			uint32[2]: 						uint32_t = 1063682995
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 17:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E508F0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 17:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E508F0

Thread 0, Frame 17:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E430F0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E508F0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001D

Thread 0, Frame 17:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 18:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E430D8
		pFences[0]: 					const VkFence = 000000000000001D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 18:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001D

Thread 0, Frame 18:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E430D8
		pFences[0]: 					const VkFence = 000000000000001D

Thread 0, Frame 18:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 18:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 18:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 18:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 18:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E4F1D0

Thread 0, Frame 18:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001E

Thread 0, Frame 18:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E4F1D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 18:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4F1D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 18:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4F1D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.457339
			float32[2]: 					float = 0.889293
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1055533126
			int32[2]: 						int32_t = 1063495855
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1055533126
			uint32[2]: 						uint32_t = 1063495855
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 18:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4F1D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 18:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E4F1D0

Thread 0, Frame 18:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E43118
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E4F1D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001E

Thread 0, Frame 18:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 19:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43100
		pFences[0]: 					const VkFence = 000000000000001E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 19:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001E

Thread 0, Frame 19:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E43100
		pFences[0]: 					const VkFence = 000000000000001E

Thread 0, Frame 19:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 19:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 19:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 19:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 19:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E53730

Thread 0, Frame 19:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000001F

Thread 0, Frame 19:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E53730
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 19:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E53730
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 19:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E53730
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.479426
			float32[2]: 					float = 0.877583
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1056274245
			int32[2]: 						int32_t = 1063299392
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1056274245
			uint32[2]: 						uint32_t = 1063299392
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 19:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E53730
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 19:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E53730

Thread 0, Frame 19:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E57480
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E53730
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000001F

Thread 0, Frame 19:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 20:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57468
		pFences[0]: 					const VkFence = 000000000000001F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 20:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000001F

Thread 0, Frame 20:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57468
		pFences[0]: 					const VkFence = 000000000000001F

Thread 0, Frame 20:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 20:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 20:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 20:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 20:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E52BA0

Thread 0, Frame 20:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000020

Thread 0, Frame 20:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E52BA0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 20:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52BA0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 20:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52BA0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.501213
			float32[2]: 					float = 0.865324
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1056984959
			int32[2]: 						int32_t = 1063093726
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1056984959
			uint32[2]: 						uint32_t = 1063093726
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 20:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52BA0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 20:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E52BA0

Thread 0, Frame 20:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E574A8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E52BA0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000020

Thread 0, Frame 20:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 21:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57490
		pFences[0]: 					const VkFence = 0000000000000020
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 21:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000020

Thread 0, Frame 21:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57490
		pFences[0]: 					const VkFence = 0000000000000020

Thread 0, Frame 21:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 21:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 21:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 21:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 21:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E52010

Thread 0, Frame 21:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000021

Thread 0, Frame 21:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E52010
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 21:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52010
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 21:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52010
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.522687
			float32[2]: 					float = 0.852525
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057345237
			int32[2]: 						int32_t = 1062878988
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057345237
			uint32[2]: 						uint32_t = 1062878988
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 21:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E52010
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 21:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E52010

Thread 0, Frame 21:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E574D0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E52010
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000021

Thread 0, Frame 21:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 22:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E574B8
		pFences[0]: 					const VkFence = 0000000000000021
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 22:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000021

Thread 0, Frame 22:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E574B8
		pFences[0]: 					const VkFence = 0000000000000021

Thread 0, Frame 22:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 22:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 22:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 22:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 22:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E51480

Thread 0, Frame 22:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000022

Thread 0, Frame 22:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E51480
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 22:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E51480
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 22:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E51480
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.543835
			float32[2]: 					float = 0.839192
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057700034
			int32[2]: 						int32_t = 1062655311
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057700034
			uint32[2]: 						uint32_t = 1062655311
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 22:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E51480
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 22:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E51480

Thread 0, Frame 22:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E574F8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E51480
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000022

Thread 0, Frame 22:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 23:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E574E0
		pFences[0]: 					const VkFence = 0000000000000022
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 23:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000022

Thread 0, Frame 23:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E574E0
		pFences[0]: 					const VkFence = 0000000000000022

Thread 0, Frame 23:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 23:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 23:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 23:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 23:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E542C0

Thread 0, Frame 23:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000023

Thread 0, Frame 23:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E542C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 23:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E542C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 23:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E542C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.564642
			float32[2]: 					float = 0.825336
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058049128
			int32[2]: 						int32_t = 1062422834
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058049128
			uint32[2]: 						uint32_t = 1062422834
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 23:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E542C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 23:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E542C0

Thread 0, Frame 23:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E57520
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E542C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000023

Thread 0, Frame 23:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 24:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57508
		pFences[0]: 					const VkFence = 0000000000000023
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 24:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000023

Thread 0, Frame 24:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57508
		pFences[0]: 					const VkFence = 0000000000000023

Thread 0, Frame 24:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 24:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 24:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 24:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 24:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E56570

Thread 0, Frame 24:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000024

Thread 0, Frame 24:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E56570
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 24:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E56570
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 24:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E56570
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.585097
			float32[2]: 					float = 0.810963
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058392303
			int32[2]: 						int32_t = 1062181704
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058392303
			uint32[2]: 						uint32_t = 1062181704
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 24:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E56570
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 24:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E56570

Thread 0, Frame 24:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E57548
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E56570
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000024

Thread 0, Frame 24:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 25:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57530
		pFences[0]: 					const VkFence = 0000000000000024
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 25:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000024

Thread 0, Frame 25:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57530
		pFences[0]: 					const VkFence = 0000000000000024

Thread 0, Frame 25:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 25:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 25:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 25:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 25:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E54E50

Thread 0, Frame 25:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000025

Thread 0, Frame 25:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E54E50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 25:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E54E50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 25:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E54E50
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.605186
			float32[2]: 					float = 0.796084
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058729342
			int32[2]: 						int32_t = 1061932071
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058729342
			uint32[2]: 						uint32_t = 1061932071
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 25:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E54E50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 25:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E54E50

Thread 0, Frame 25:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E57570
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E54E50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000025

Thread 0, Frame 25:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 26:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57558
		pFences[0]: 					const VkFence = 0000000000000025
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 26:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000025

Thread 0, Frame 26:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57558
		pFences[0]: 					const VkFence = 0000000000000025

Thread 0, Frame 26:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 26:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 26:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 26:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 26:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E559E0

Thread 0, Frame 26:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000026

Thread 0, Frame 26:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E559E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 26:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E559E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 26:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E559E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.624897
			float32[2]: 					float = 0.780707
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059060036
			int32[2]: 						int32_t = 1061674090
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059060036
			uint32[2]: 						uint32_t = 1061674090
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 26:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E559E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 26:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E559E0

Thread 0, Frame 26:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E57598
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E559E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000026

Thread 0, Frame 26:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 27:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57580
		pFences[0]: 					const VkFence = 0000000000000026
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 27:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000026

Thread 0, Frame 27:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E57580
		pFences[0]: 					const VkFence = 0000000000000026

Thread 0, Frame 27:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 27:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 27:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 27:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 27:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800E4FD60

Thread 0, Frame 27:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000027

Thread 0, Frame 27:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E4FD60
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 27:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4FD60
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 27:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4FD60
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.644218
			float32[2]: 					float = 0.764842
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059384178
			int32[2]: 						int32_t = 1061407924
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059384178
			uint32[2]: 						uint32_t = 1061407924
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 27:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800E4FD60
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 27:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800E4FD60

Thread 0, Frame 27:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E575C0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800E4FD60
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000027

Thread 0, Frame 27:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 28:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E575A8
		pFences[0]: 					const VkFence = 0000000000000027
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 28:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000027

Thread 0, Frame 28:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E575A8
		pFences[0]: 					const VkFence = 0000000000000027

Thread 0, Frame 28:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 28:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 28:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 28:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 28:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F470B0

Thread 0, Frame 28:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000028

Thread 0, Frame 28:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F470B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 28:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F470B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 28:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F470B0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.663135
			float32[2]: 					float = 0.7485
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059701565
			int32[2]: 						int32_t = 1061133738
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059701565
			uint32[2]: 						uint32_t = 1061133738
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 28:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F470B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 28:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F470B0

Thread 0, Frame 28:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59EA8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F470B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000028

Thread 0, Frame 28:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 29:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59E90
		pFences[0]: 					const VkFence = 0000000000000028
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 29:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000028

Thread 0, Frame 29:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59E90
		pFences[0]: 					const VkFence = 0000000000000028

Thread 0, Frame 29:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 29:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 29:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 29:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 29:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F49EF0

Thread 0, Frame 29:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000029

Thread 0, Frame 29:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F49EF0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 29:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49EF0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 29:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49EF0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.681639
			float32[2]: 					float = 0.731689
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060011999
			int32[2]: 						int32_t = 1060851704
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060011999
			uint32[2]: 						uint32_t = 1060851704
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 29:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49EF0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 29:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F49EF0

Thread 0, Frame 29:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59ED0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F49EF0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000029

Thread 0, Frame 29:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 30:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59EB8
		pFences[0]: 					const VkFence = 0000000000000029
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 30:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000029

Thread 0, Frame 30:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59EB8
		pFences[0]: 					const VkFence = 0000000000000029

Thread 0, Frame 30:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 30:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 30:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 30:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 30:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4B610

Thread 0, Frame 30:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002A

Thread 0, Frame 30:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4B610
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 30:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4B610
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 30:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4B610
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.699716
			float32[2]: 					float = 0.714421
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060315285
			int32[2]: 						int32_t = 1060561998
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060315285
			uint32[2]: 						uint32_t = 1060561998
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 30:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4B610
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 30:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4B610

Thread 0, Frame 30:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59EF8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4B610
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002A

Thread 0, Frame 30:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 31:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59EE0
		pFences[0]: 					const VkFence = 000000000000002A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 31:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002A

Thread 0, Frame 31:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59EE0
		pFences[0]: 					const VkFence = 000000000000002A

Thread 0, Frame 31:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 31:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 31:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 31:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 31:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4D8C0

Thread 0, Frame 31:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002B

Thread 0, Frame 31:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4D8C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 31:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4D8C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 31:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4D8C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.717356
			float32[2]: 					float = 0.696707
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060611235
			int32[2]: 						int32_t = 1060264802
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060611235
			uint32[2]: 						uint32_t = 1060264802
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 31:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4D8C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 31:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4D8C0

Thread 0, Frame 31:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59F20
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4D8C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002B

Thread 0, Frame 31:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 32:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F08
		pFences[0]: 					const VkFence = 000000000000002B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 32:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002B

Thread 0, Frame 32:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F08
		pFences[0]: 					const VkFence = 000000000000002B

Thread 0, Frame 32:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 32:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 32:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 32:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 32:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4C1A0

Thread 0, Frame 32:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002C

Thread 0, Frame 32:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4C1A0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 32:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4C1A0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 32:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4C1A0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.734548
			float32[2]: 					float = 0.678557
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060899664
			int32[2]: 						int32_t = 1059960300
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060899664
			uint32[2]: 						uint32_t = 1059960300
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 32:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4C1A0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 32:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4C1A0

Thread 0, Frame 32:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59F48
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4C1A0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002C

Thread 0, Frame 32:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 33:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F30
		pFences[0]: 					const VkFence = 000000000000002C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 33:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002C

Thread 0, Frame 33:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F30
		pFences[0]: 					const VkFence = 000000000000002C

Thread 0, Frame 33:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 33:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 33:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 33:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 33:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4E450

Thread 0, Frame 33:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002D

Thread 0, Frame 33:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4E450
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 33:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4E450
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 33:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4E450
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.75128
			float32[2]: 					float = 0.659983
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061180391
			int32[2]: 						int32_t = 1059648683
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061180391
			uint32[2]: 						uint32_t = 1059648683
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 33:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4E450
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 33:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4E450

Thread 0, Frame 33:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59F70
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4E450
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002D

Thread 0, Frame 33:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 34:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F58
		pFences[0]: 					const VkFence = 000000000000002D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 34:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002D

Thread 0, Frame 34:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F58
		pFences[0]: 					const VkFence = 000000000000002D

Thread 0, Frame 34:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 34:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 34:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 34:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 34:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F487D0

Thread 0, Frame 34:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002E

Thread 0, Frame 34:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F487D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 34:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F487D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 34:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F487D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.767543
			float32[2]: 					float = 0.640997
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061453240
			int32[2]: 						int32_t = 1059330147
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061453240
			uint32[2]: 						uint32_t = 1059330147
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 34:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F487D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 34:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F487D0

Thread 0, Frame 34:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59F98
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F487D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002E

Thread 0, Frame 34:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 35:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F80
		pFences[0]: 					const VkFence = 000000000000002E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 35:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002E

Thread 0, Frame 35:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59F80
		pFences[0]: 					const VkFence = 000000000000002E

Thread 0, Frame 35:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 35:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 35:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 35:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 35:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4AA80

Thread 0, Frame 35:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000002F

Thread 0, Frame 35:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4AA80
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 35:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4AA80
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 35:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4AA80
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.783327
			float32[2]: 					float = 0.62161
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061718041
			int32[2]: 						int32_t = 1059004889
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061718041
			uint32[2]: 						uint32_t = 1059004889
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 35:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4AA80
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 35:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4AA80

Thread 0, Frame 35:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59FC0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4AA80
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000002F

Thread 0, Frame 35:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 36:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FA8
		pFences[0]: 					const VkFence = 000000000000002F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 36:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000002F

Thread 0, Frame 36:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FA8
		pFences[0]: 					const VkFence = 000000000000002F

Thread 0, Frame 36:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 36:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 36:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 36:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 36:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F47C40

Thread 0, Frame 36:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000030

Thread 0, Frame 36:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F47C40
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 36:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F47C40
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 36:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F47C40
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.798621
			float32[2]: 					float = 0.601835
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061974630
			int32[2]: 						int32_t = 1058673114
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061974630
			uint32[2]: 						uint32_t = 1058673114
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 36:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F47C40
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 36:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F47C40

Thread 0, Frame 36:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E59FE8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F47C40
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000030

Thread 0, Frame 36:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 37:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FD0
		pFences[0]: 					const VkFence = 0000000000000030
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 37:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000030

Thread 0, Frame 37:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FD0
		pFences[0]: 					const VkFence = 0000000000000030

Thread 0, Frame 37:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 37:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 37:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 37:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 37:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4CD30

Thread 0, Frame 37:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000031

Thread 0, Frame 37:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4CD30
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 37:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4CD30
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 37:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4CD30
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.813415
			float32[2]: 					float = 0.581683
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062222844
			int32[2]: 						int32_t = 1058335028
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062222844
			uint32[2]: 						uint32_t = 1058335028
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 37:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4CD30
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 37:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4CD30

Thread 0, Frame 37:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A010
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4CD30
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000031

Thread 0, Frame 37:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 38:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FF8
		pFences[0]: 					const VkFence = 0000000000000031
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 38:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000031

Thread 0, Frame 38:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E59FF8
		pFences[0]: 					const VkFence = 0000000000000031

Thread 0, Frame 38:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 38:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 38:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 38:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 38:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4FB70

Thread 0, Frame 38:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000032

Thread 0, Frame 38:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4FB70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 38:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4FB70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 38:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4FB70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.827702
			float32[2]: 					float = 0.561168
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062462530
			int32[2]: 						int32_t = 1057990843
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062462530
			uint32[2]: 						uint32_t = 1057990843
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 38:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4FB70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 38:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4FB70

Thread 0, Frame 38:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A038
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4FB70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000032

Thread 0, Frame 38:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 39:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A020
		pFences[0]: 					const VkFence = 0000000000000032
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 39:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000032

Thread 0, Frame 39:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A020
		pFences[0]: 					const VkFence = 0000000000000032

Thread 0, Frame 39:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 39:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 39:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 39:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 39:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F49360

Thread 0, Frame 39:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000033

Thread 0, Frame 39:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F49360
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 39:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49360
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 39:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49360
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.841471
			float32[2]: 					float = 0.540303
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062693537
			int32[2]: 						int32_t = 1057640774
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062693537
			uint32[2]: 						uint32_t = 1057640774
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 39:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F49360
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 39:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F49360

Thread 0, Frame 39:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A060
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F49360
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000033

Thread 0, Frame 39:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 40:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A048
		pFences[0]: 					const VkFence = 0000000000000033
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 40:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000033

Thread 0, Frame 40:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A048
		pFences[0]: 					const VkFence = 0000000000000033

Thread 0, Frame 40:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 40:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 40:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 40:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 40:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F50700

Thread 0, Frame 40:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000034

Thread 0, Frame 40:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F50700
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 40:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F50700
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 40:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F50700
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.854714
			float32[2]: 					float = 0.519099
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062915721
			int32[2]: 						int32_t = 1057285040
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062915721
			uint32[2]: 						uint32_t = 1057285040
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 40:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F50700
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 40:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F50700

Thread 0, Frame 40:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A088
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F50700
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000034

Thread 0, Frame 40:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 41:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A070
		pFences[0]: 					const VkFence = 0000000000000034
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 41:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000034

Thread 0, Frame 41:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A070
		pFences[0]: 					const VkFence = 0000000000000034

Thread 0, Frame 41:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 41:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 41:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 41:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 41:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F529B0

Thread 0, Frame 41:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000035

Thread 0, Frame 41:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F529B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 41:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F529B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 41:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F529B0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.867423
			float32[2]: 					float = 0.497571
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063128943
			int32[2]: 						int32_t = 1056883118
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063128943
			uint32[2]: 						uint32_t = 1056883118
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 41:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F529B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 41:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F529B0

Thread 0, Frame 41:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A0B0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F529B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000035

Thread 0, Frame 41:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 42:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A098
		pFences[0]: 					const VkFence = 0000000000000035
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 42:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000035

Thread 0, Frame 42:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A098
		pFences[0]: 					const VkFence = 0000000000000035

Thread 0, Frame 42:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 42:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 42:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 42:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 42:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F51E20

Thread 0, Frame 42:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000036

Thread 0, Frame 42:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F51E20
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 42:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51E20
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 42:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51E20
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.87959
			float32[2]: 					float = 0.475733
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063333071
			int32[2]: 						int32_t = 1056150330
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063333071
			uint32[2]: 						uint32_t = 1056150330
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 42:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51E20
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 42:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F51E20

Thread 0, Frame 42:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980042FF48
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F51E20
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000036

Thread 0, Frame 42:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 43:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF30
		pFences[0]: 					const VkFence = 0000000000000036
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 43:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000036

Thread 0, Frame 43:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF30
		pFences[0]: 					const VkFence = 0000000000000036

Thread 0, Frame 43:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 43:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 43:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 43:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 43:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F53540

Thread 0, Frame 43:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000037

Thread 0, Frame 43:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F53540
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 43:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F53540
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 43:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F53540
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.891207
			float32[2]: 					float = 0.453597
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063527975
			int32[2]: 						int32_t = 1055407566
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063527975
			uint32[2]: 						uint32_t = 1055407566
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 43:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F53540
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 43:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F53540

Thread 0, Frame 43:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980042FF70
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F53540
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000037

Thread 0, Frame 43:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 44:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF58
		pFences[0]: 					const VkFence = 0000000000000037
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 44:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000037

Thread 0, Frame 44:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF58
		pFences[0]: 					const VkFence = 0000000000000037

Thread 0, Frame 44:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 44:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 44:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 44:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 44:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F540D0

Thread 0, Frame 44:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000038

Thread 0, Frame 44:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F540D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 44:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F540D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 44:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F540D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.902267
			float32[2]: 					float = 0.431177
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063713535
			int32[2]: 						int32_t = 1054655290
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063713535
			uint32[2]: 						uint32_t = 1054655290
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 44:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F540D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 44:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F540D0

Thread 0, Frame 44:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980042FF98
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F540D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000038

Thread 0, Frame 44:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 45:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF80
		pFences[0]: 					const VkFence = 0000000000000038
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 45:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000038

Thread 0, Frame 45:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FF80
		pFences[0]: 					const VkFence = 0000000000000038

Thread 0, Frame 45:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 45:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 45:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 45:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 45:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F54C60

Thread 0, Frame 45:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000039

Thread 0, Frame 45:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F54C60
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 45:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F54C60
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 45:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F54C60
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.912764
			float32[2]: 					float = 0.408488
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063889634
			int32[2]: 						int32_t = 1053893971
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063889634
			uint32[2]: 						uint32_t = 1053893971
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 45:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F54C60
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 45:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F54C60

Thread 0, Frame 45:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980042FFC0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F54C60
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000039

Thread 0, Frame 45:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 46:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFA8
		pFences[0]: 					const VkFence = 0000000000000039
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 46:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000039

Thread 0, Frame 46:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFA8
		pFences[0]: 					const VkFence = 0000000000000039

Thread 0, Frame 46:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 46:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 46:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 46:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 46:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F557F0

Thread 0, Frame 46:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003A

Thread 0, Frame 46:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F557F0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 46:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F557F0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 46:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F557F0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.92269
			float32[2]: 					float = 0.385544
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064056163
			int32[2]: 						int32_t = 1053124087
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064056163
			uint32[2]: 						uint32_t = 1053124087
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 46:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F557F0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 46:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F557F0

Thread 0, Frame 46:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980042FFE8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F557F0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003A

Thread 0, Frame 46:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 47:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFD0
		pFences[0]: 					const VkFence = 000000000000003A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 47:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003A

Thread 0, Frame 47:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFD0
		pFences[0]: 					const VkFence = 000000000000003A

Thread 0, Frame 47:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 47:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 47:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 47:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 47:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F4EFE0

Thread 0, Frame 47:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003B

Thread 0, Frame 47:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4EFE0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 47:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4EFE0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 47:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4EFE0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.932039
			float32[2]: 					float = 0.362358
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064213018
			int32[2]: 						int32_t = 1052346118
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064213018
			uint32[2]: 						uint32_t = 1052346118
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 47:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F4EFE0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 47:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F4EFE0

Thread 0, Frame 47:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430010
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F4EFE0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003B

Thread 0, Frame 47:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 48:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFF8
		pFences[0]: 					const VkFence = 000000000000003B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 48:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003B

Thread 0, Frame 48:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980042FFF8
		pFences[0]: 					const VkFence = 000000000000003B

Thread 0, Frame 48:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 48:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 48:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 48:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 48:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F51290

Thread 0, Frame 48:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003C

Thread 0, Frame 48:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F51290
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 48:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51290
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 48:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51290
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.940806
			float32[2]: 					float = 0.338947
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064360100
			int32[2]: 						int32_t = 1051560550
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064360100
			uint32[2]: 						uint32_t = 1051560550
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 48:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F51290
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 48:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F51290

Thread 0, Frame 48:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430038
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F51290
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003C

Thread 0, Frame 48:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 49:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430020
		pFences[0]: 					const VkFence = 000000000000003C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 49:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003C

Thread 0, Frame 49:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430020
		pFences[0]: 					const VkFence = 000000000000003C

Thread 0, Frame 49:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 49:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 49:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 49:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 49:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F56380

Thread 0, Frame 49:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003D

Thread 0, Frame 49:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F56380
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 49:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F56380
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 49:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F56380
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.948984
			float32[2]: 					float = 0.315323
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064497317
			int32[2]: 						int32_t = 1050767874
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064497317
			uint32[2]: 						uint32_t = 1050767874
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 49:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F56380
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 49:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F56380

Thread 0, Frame 49:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430060
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F56380
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003D

Thread 0, Frame 49:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 50:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430048
		pFences[0]: 					const VkFence = 000000000000003D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 50:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003D

Thread 0, Frame 50:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430048
		pFences[0]: 					const VkFence = 000000000000003D

Thread 0, Frame 50:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 50:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 50:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 50:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 50:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F7E030

Thread 0, Frame 50:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003E

Thread 0, Frame 50:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7E030
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 50:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7E030
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 50:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7E030
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.95657
			float32[2]: 					float = 0.291502
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064624584
			int32[2]: 						int32_t = 1049968585
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064624584
			uint32[2]: 						uint32_t = 1049968585
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 50:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7E030
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 50:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7E030

Thread 0, Frame 50:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430088
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F7E030
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003E

Thread 0, Frame 50:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 51:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430070
		pFences[0]: 					const VkFence = 000000000000003E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 51:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003E

Thread 0, Frame 51:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430070
		pFences[0]: 					const VkFence = 000000000000003E

Thread 0, Frame 51:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 51:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 51:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 51:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 51:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F7D4A0

Thread 0, Frame 51:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000003F

Thread 0, Frame 51:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7D4A0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 51:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7D4A0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 51:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7D4A0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.963558
			float32[2]: 					float = 0.267499
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064741821
			int32[2]: 						int32_t = 1049163184
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064741821
			uint32[2]: 						uint32_t = 1049163184
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 51:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7D4A0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 51:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7D4A0

Thread 0, Frame 51:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 00000198004300B0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F7D4A0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000003F

Thread 0, Frame 51:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 52:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430098
		pFences[0]: 					const VkFence = 000000000000003F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 52:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000003F

Thread 0, Frame 52:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430098
		pFences[0]: 					const VkFence = 000000000000003F

Thread 0, Frame 52:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 52:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 52:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 52:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 52:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F80E70

Thread 0, Frame 52:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000040

Thread 0, Frame 52:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F80E70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 52:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F80E70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 52:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F80E70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.969944
			float32[2]: 					float = 0.243329
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064848955
			int32[2]: 						int32_t = 1048128346
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064848955
			uint32[2]: 						uint32_t = 1048128346
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 52:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F80E70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 52:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F80E70

Thread 0, Frame 52:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 00000198004300D8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F80E70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000040

Thread 0, Frame 52:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 53:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004300C0
		pFences[0]: 					const VkFence = 0000000000000040
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 53:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000040

Thread 0, Frame 53:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004300C0
		pFences[0]: 					const VkFence = 0000000000000040

Thread 0, Frame 53:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 53:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 53:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 53:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 53:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F7F750

Thread 0, Frame 53:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000041

Thread 0, Frame 53:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7F750
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 53:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7F750
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 53:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7F750
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.975723
			float32[2]: 					float = 0.219007
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064945919
			int32[2]: 						int32_t = 1046496119
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064945919
			uint32[2]: 						uint32_t = 1046496119
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 53:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7F750
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 53:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7F750

Thread 0, Frame 53:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430100
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F7F750
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000041

Thread 0, Frame 53:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 54:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004300E8
		pFences[0]: 					const VkFence = 0000000000000041
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 54:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000041

Thread 0, Frame 54:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004300E8
		pFences[0]: 					const VkFence = 0000000000000041

Thread 0, Frame 54:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 54:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 54:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 54:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 54:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F7EBC0

Thread 0, Frame 54:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000042

Thread 0, Frame 54:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7EBC0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 54:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7EBC0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 54:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7EBC0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.980893
			float32[2]: 					float = 0.194548
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065032652
			int32[2]: 						int32_t = 1044854707
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065032652
			uint32[2]: 						uint32_t = 1044854707
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 54:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7EBC0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 54:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7EBC0

Thread 0, Frame 54:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430128
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F7EBC0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000042

Thread 0, Frame 54:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 55:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430110
		pFences[0]: 					const VkFence = 0000000000000042
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 55:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000042

Thread 0, Frame 55:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430110
		pFences[0]: 					const VkFence = 0000000000000042

Thread 0, Frame 55:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 55:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 55:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 55:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 55:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F83120

Thread 0, Frame 55:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000043

Thread 0, Frame 55:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F83120
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 55:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83120
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 55:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83120
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.98545
			float32[2]: 					float = 0.169968
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065109101
			int32[2]: 						int32_t = 1043205135
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065109101
			uint32[2]: 						uint32_t = 1043205135
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 55:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83120
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 55:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F83120

Thread 0, Frame 55:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430150
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F83120
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000043

Thread 0, Frame 55:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 56:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430138
		pFences[0]: 					const VkFence = 0000000000000043
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 56:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000043

Thread 0, Frame 56:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430138
		pFences[0]: 					const VkFence = 0000000000000043

Thread 0, Frame 56:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 56:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 56:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 56:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 56:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F802E0

Thread 0, Frame 56:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000044

Thread 0, Frame 56:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F802E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 56:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F802E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 56:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F802E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.98939
			float32[2]: 					float = 0.145281
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065175217
			int32[2]: 						int32_t = 1041548434
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065175217
			uint32[2]: 						uint32_t = 1041548434
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 56:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F802E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 56:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F802E0

Thread 0, Frame 56:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430178
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F802E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000044

Thread 0, Frame 56:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 57:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430160
		pFences[0]: 					const VkFence = 0000000000000044
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 57:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000044

Thread 0, Frame 57:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430160
		pFences[0]: 					const VkFence = 0000000000000044

Thread 0, Frame 57:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 57:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 57:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 57:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 57:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F81A00

Thread 0, Frame 57:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000045

Thread 0, Frame 57:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F81A00
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 57:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F81A00
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 57:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F81A00
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.992713
			float32[2]: 					float = 0.120504
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065230959
			int32[2]: 						int32_t = 1039583889
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065230959
			uint32[2]: 						uint32_t = 1039583889
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 57:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F81A00
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 57:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F81A00

Thread 0, Frame 57:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 00000198004301A0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F81A00
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000045

Thread 0, Frame 57:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 58:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430188
		pFences[0]: 					const VkFence = 0000000000000045
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 58:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000045

Thread 0, Frame 58:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430188
		pFences[0]: 					const VkFence = 0000000000000045

Thread 0, Frame 58:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 58:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 58:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 58:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 58:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F82590

Thread 0, Frame 58:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000046

Thread 0, Frame 58:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F82590
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 58:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F82590
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 58:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F82590
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.995415
			float32[2]: 					float = 0.0956507
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065276292
			int32[2]: 						int32_t = 1036248193
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065276292
			uint32[2]: 						uint32_t = 1036248193
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 58:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F82590
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 58:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F82590

Thread 0, Frame 58:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 00000198004301C8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F82590
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000046

Thread 0, Frame 58:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 59:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004301B0
		pFences[0]: 					const VkFence = 0000000000000046
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 59:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000046

Thread 0, Frame 59:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004301B0
		pFences[0]: 					const VkFence = 0000000000000046

Thread 0, Frame 59:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 59:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 59:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 59:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 59:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F7C910

Thread 0, Frame 59:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000047

Thread 0, Frame 59:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7C910
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 59:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7C910
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 59:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7C910
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.997495
			float32[2]: 					float = 0.070738
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065311188
			int32[2]: 						int32_t = 1032904474
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065311188
			uint32[2]: 						uint32_t = 1032904474
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 59:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F7C910
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 59:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F7C910

Thread 0, Frame 59:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 00000198004301F0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F7C910
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000047

Thread 0, Frame 59:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 60:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004301D8
		pFences[0]: 					const VkFence = 0000000000000047
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 60:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000047

Thread 0, Frame 60:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 00000198004301D8
		pFences[0]: 					const VkFence = 0000000000000047

Thread 0, Frame 60:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 60:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 60:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 60:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 60:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F89930

Thread 0, Frame 60:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000048

Thread 0, Frame 60:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F89930
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 60:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F89930
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 60:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F89930
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.998951
			float32[2]: 					float = 0.0457812
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065335625
			int32[2]: 						int32_t = 1027310859
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065335625
			uint32[2]: 						uint32_t = 1027310859
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 60:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F89930
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 60:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F89930

Thread 0, Frame 60:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430218
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F89930
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000048

Thread 0, Frame 60:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 61:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430200
		pFences[0]: 					const VkFence = 0000000000000048
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 61:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000048

Thread 0, Frame 61:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430200
		pFences[0]: 					const VkFence = 0000000000000048

Thread 0, Frame 61:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 61:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 61:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 61:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 61:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F85F60

Thread 0, Frame 61:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000049

Thread 0, Frame 61:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F85F60
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 61:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F85F60
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 61:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F85F60
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.999784
			float32[2]: 					float = 0.0207957
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065349588
			int32[2]: 						int32_t = 1017797572
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065349588
			uint32[2]: 						uint32_t = 1017797572
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 61:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F85F60
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 61:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F85F60

Thread 0, Frame 61:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430240
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F85F60
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000049

Thread 0, Frame 61:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 62:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430228
		pFences[0]: 					const VkFence = 0000000000000049
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 62:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000049

Thread 0, Frame 62:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430228
		pFences[0]: 					const VkFence = 0000000000000049

Thread 0, Frame 62:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 62:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 62:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 62:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 62:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F86AF0

Thread 0, Frame 62:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004A

Thread 0, Frame 62:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F86AF0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 62:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F86AF0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 62:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F86AF0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.999991
			float32[2]: 					float = 0.00420275
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065353068
			int32[2]: 						int32_t = 998881091
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065353068
			uint32[2]: 						uint32_t = 998881091
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 62:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F86AF0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 62:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F86AF0

Thread 0, Frame 62:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800430268
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F86AF0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004A

Thread 0, Frame 62:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 63:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430250
		pFences[0]: 					const VkFence = 000000000000004A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 63:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004A

Thread 0, Frame 63:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800430250
		pFences[0]: 					const VkFence = 000000000000004A

Thread 0, Frame 63:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 63:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 63:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 63:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 63:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F853D0

Thread 0, Frame 63:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004B

Thread 0, Frame 63:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F853D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 63:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F853D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 63:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F853D0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.999574
			float32[2]: 					float = 0.0291986
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065346063
			int32[2]: 						int32_t = 1022308835
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065346063
			uint32[2]: 						uint32_t = 1022308835
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 63:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F853D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 63:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F853D0

Thread 0, Frame 63:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A820
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F853D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004B

Thread 0, Frame 63:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 64:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A808
		pFences[0]: 					const VkFence = 000000000000004B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 64:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004B

Thread 0, Frame 64:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A808
		pFences[0]: 					const VkFence = 000000000000004B

Thread 0, Frame 64:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 64:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 64:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 64:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 64:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F87680

Thread 0, Frame 64:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004C

Thread 0, Frame 64:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F87680
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 64:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F87680
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 64:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F87680
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.998531
			float32[2]: 					float = 0.0541762
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065328577
			int32[2]: 						int32_t = 1029564376
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065328577
			uint32[2]: 						uint32_t = 1029564376
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 64:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F87680
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 64:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F87680

Thread 0, Frame 64:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A848
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F87680
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004C

Thread 0, Frame 64:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 65:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A830
		pFences[0]: 					const VkFence = 000000000000004C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 65:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004C

Thread 0, Frame 65:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A830
		pFences[0]: 					const VkFence = 000000000000004C

Thread 0, Frame 65:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 65:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 65:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 65:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 65:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F8A4C0

Thread 0, Frame 65:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004D

Thread 0, Frame 65:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8A4C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 65:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8A4C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 65:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8A4C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.996865
			float32[2]: 					float = 0.0791199
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065300621
			int32[2]: 						int32_t = 1034029471
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065300621
			uint32[2]: 						uint32_t = 1034029471
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 65:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8A4C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 65:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8A4C0

Thread 0, Frame 65:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A870
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F8A4C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004D

Thread 0, Frame 65:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 66:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A858
		pFences[0]: 					const VkFence = 000000000000004D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 66:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004D

Thread 0, Frame 66:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A858
		pFences[0]: 					const VkFence = 000000000000004D

Thread 0, Frame 66:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 66:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 66:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 66:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 66:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F88DA0

Thread 0, Frame 66:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004E

Thread 0, Frame 66:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F88DA0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 66:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88DA0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 66:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88DA0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.994576
			float32[2]: 					float = 0.104014
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065262213
			int32[2]: 						int32_t = 1037370725
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065262213
			uint32[2]: 						uint32_t = 1037370725
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 66:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88DA0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 66:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F88DA0

Thread 0, Frame 66:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A898
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F88DA0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004E

Thread 0, Frame 66:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 67:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A880
		pFences[0]: 					const VkFence = 000000000000004E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 67:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004E

Thread 0, Frame 67:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A880
		pFences[0]: 					const VkFence = 000000000000004E

Thread 0, Frame 67:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 67:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 67:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 67:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 67:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F83CB0

Thread 0, Frame 67:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000004F

Thread 0, Frame 67:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F83CB0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 67:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83CB0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 67:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83CB0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.991665
			float32[2]: 					float = 0.128843
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065213377
			int32[2]: 						int32_t = 1040445323
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065213377
			uint32[2]: 						uint32_t = 1040445323
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 67:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F83CB0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 67:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F83CB0

Thread 0, Frame 67:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A8C0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F83CB0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000004F

Thread 0, Frame 67:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 68:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8A8
		pFences[0]: 					const VkFence = 000000000000004F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 68:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000004F

Thread 0, Frame 68:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8A8
		pFences[0]: 					const VkFence = 000000000000004F

Thread 0, Frame 68:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 68:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 68:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 68:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 68:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F88210

Thread 0, Frame 68:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000050

Thread 0, Frame 68:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F88210
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 68:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88210
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 68:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88210
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.988134
			float32[2]: 					float = 0.153592
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065154143
			int32[2]: 						int32_t = 1042106184
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065154143
			uint32[2]: 						uint32_t = 1042106184
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 68:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F88210
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 68:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F88210

Thread 0, Frame 68:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A8E8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F88210
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000050

Thread 0, Frame 68:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 69:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8D0
		pFences[0]: 					const VkFence = 0000000000000050
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 69:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000050

Thread 0, Frame 69:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8D0
		pFences[0]: 					const VkFence = 0000000000000050

Thread 0, Frame 69:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 69:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 69:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 69:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 69:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F84840

Thread 0, Frame 69:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000051

Thread 0, Frame 69:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F84840
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 69:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F84840
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 69:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F84840
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.983986
			float32[2]: 					float = 0.178245
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065084548
			int32[2]: 						int32_t = 1043760603
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065084548
			uint32[2]: 						uint32_t = 1043760603
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 69:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F84840
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 69:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F84840

Thread 0, Frame 69:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A910
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F84840
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000051

Thread 0, Frame 69:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 70:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8F8
		pFences[0]: 					const VkFence = 0000000000000051
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 70:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000051

Thread 0, Frame 70:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A8F8
		pFences[0]: 					const VkFence = 0000000000000051

Thread 0, Frame 70:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 70:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 70:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 70:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 70:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F8B050

Thread 0, Frame 70:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000052

Thread 0, Frame 70:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8B050
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 70:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8B050
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 70:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8B050
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.979223
			float32[2]: 					float = 0.202786
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1065004636
			int32[2]: 						int32_t = 1045407547
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1065004636
			uint32[2]: 						uint32_t = 1045407547
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 70:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8B050
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 70:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8B050

Thread 0, Frame 70:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A938
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F8B050
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000052

Thread 0, Frame 70:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 71:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A920
		pFences[0]: 					const VkFence = 0000000000000052
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 71:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000052

Thread 0, Frame 71:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A920
		pFences[0]: 					const VkFence = 0000000000000052

Thread 0, Frame 71:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 71:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 71:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 71:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 71:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019800F8BBE0

Thread 0, Frame 71:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000053

Thread 0, Frame 71:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8BBE0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 71:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8BBE0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 71:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8BBE0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.973848
			float32[2]: 					float = 0.227201
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064914456
			int32[2]: 						int32_t = 1047045985
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064914456
			uint32[2]: 						uint32_t = 1047045985
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 71:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019800F8BBE0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 71:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019800F8BBE0

Thread 0, Frame 71:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A960
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019800F8BBE0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000053

Thread 0, Frame 71:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 72:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A948
		pFences[0]: 					const VkFence = 0000000000000053
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 72:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000053

Thread 0, Frame 72:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A948
		pFences[0]: 					const VkFence = 0000000000000053

Thread 0, Frame 72:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 72:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 72:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 72:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 72:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100D870

Thread 0, Frame 72:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000054

Thread 0, Frame 72:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100D870
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 72:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100D870
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 72:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100D870
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.967864
			float32[2]: 					float = 0.251474
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064814066
			int32[2]: 						int32_t = 1048625447
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064814066
			uint32[2]: 						uint32_t = 1048625447
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 72:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100D870
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 72:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100D870

Thread 0, Frame 72:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A988
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100D870
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000054

Thread 0, Frame 72:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 73:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A970
		pFences[0]: 					const VkFence = 0000000000000054
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 73:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000054

Thread 0, Frame 73:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A970
		pFences[0]: 					const VkFence = 0000000000000054

Thread 0, Frame 73:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 73:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 73:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 73:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 73:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100FB20

Thread 0, Frame 73:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000055

Thread 0, Frame 73:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100FB20
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 73:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100FB20
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 73:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100FB20
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.961276
			float32[2]: 					float = 0.275589
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064703527
			int32[2]: 						int32_t = 1049434629
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064703527
			uint32[2]: 						uint32_t = 1049434629
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 73:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100FB20
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 73:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100FB20

Thread 0, Frame 73:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A9B0
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100FB20
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000055

Thread 0, Frame 73:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 74:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A998
		pFences[0]: 					const VkFence = 0000000000000055
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 74:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000055

Thread 0, Frame 74:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A998
		pFences[0]: 					const VkFence = 0000000000000055

Thread 0, Frame 74:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 74:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 74:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 74:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 74:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100E400

Thread 0, Frame 74:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000056

Thread 0, Frame 74:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100E400
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 74:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100E400
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 74:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100E400
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.954086
			float32[2]: 					float = 0.299532
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064582909
			int32[2]: 						int32_t = 1050238031
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064582909
			uint32[2]: 						uint32_t = 1050238031
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 74:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100E400
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 74:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100E400

Thread 0, Frame 74:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5A9D8
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100E400
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000056

Thread 0, Frame 74:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 75:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A9C0
		pFences[0]: 					const VkFence = 0000000000000056
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 75:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000056

Thread 0, Frame 75:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A9C0
		pFences[0]: 					const VkFence = 0000000000000056

Thread 0, Frame 75:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 75:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 75:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 75:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 75:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100EF90

Thread 0, Frame 75:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000057

Thread 0, Frame 75:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100EF90
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 75:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100EF90
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 75:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100EF90
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.946301
			float32[2]: 					float = 0.323288
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064452288
			int32[2]: 						int32_t = 1051035151
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064452288
			uint32[2]: 						uint32_t = 1051035151
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 75:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100EF90
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 75:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100EF90

Thread 0, Frame 75:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AA00
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100EF90
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000057

Thread 0, Frame 75:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 76:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A9E8
		pFences[0]: 					const VkFence = 0000000000000057
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 76:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000057

Thread 0, Frame 76:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5A9E8
		pFences[0]: 					const VkFence = 0000000000000057

Thread 0, Frame 76:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 76:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 76:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 76:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 76:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100C150

Thread 0, Frame 76:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000058

Thread 0, Frame 76:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100C150
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 76:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100C150
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 76:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100C150
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.937923
			float32[2]: 					float = 0.346842
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064311744
			int32[2]: 						int32_t = 1051825492
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064311744
			uint32[2]: 						uint32_t = 1051825492
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 76:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100C150
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 76:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100C150

Thread 0, Frame 76:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AA28
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100C150
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000058

Thread 0, Frame 76:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 77:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA10
		pFences[0]: 					const VkFence = 0000000000000058
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 77:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000058

Thread 0, Frame 77:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA10
		pFences[0]: 					const VkFence = 0000000000000058

Thread 0, Frame 77:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 77:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 77:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 77:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 77:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801011DD0

Thread 0, Frame 77:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000059

Thread 0, Frame 77:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801011DD0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 77:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011DD0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 77:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011DD0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.92896
			float32[2]: 					float = 0.37018
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064161366
			int32[2]: 						int32_t = 1052608560
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064161366
			uint32[2]: 						uint32_t = 1052608560
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 77:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011DD0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 77:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801011DD0

Thread 0, Frame 77:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AA50
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801011DD0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000059

Thread 0, Frame 77:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 78:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA38
		pFences[0]: 					const VkFence = 0000000000000059
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 78:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000059

Thread 0, Frame 78:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA38
		pFences[0]: 					const VkFence = 0000000000000059

Thread 0, Frame 78:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 78:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 78:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 78:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 78:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010106B0

Thread 0, Frame 78:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005A

Thread 0, Frame 78:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010106B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 78:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010106B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 78:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010106B0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.919416
			float32[2]: 					float = 0.393286
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1064001247
			int32[2]: 						int32_t = 1053383865
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1064001247
			uint32[2]: 						uint32_t = 1053383865
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 78:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010106B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 78:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010106B0

Thread 0, Frame 78:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AA78
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010106B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005A

Thread 0, Frame 78:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 79:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA60
		pFences[0]: 					const VkFence = 000000000000005A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 79:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005A

Thread 0, Frame 79:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA60
		pFences[0]: 					const VkFence = 000000000000005A

Thread 0, Frame 79:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 79:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 79:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 79:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 79:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801012960

Thread 0, Frame 79:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005B

Thread 0, Frame 79:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801012960
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 79:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801012960
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 79:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801012960
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.909298
			float32[2]: 					float = 0.416146
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063831488
			int32[2]: 						int32_t = 1054150923
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063831488
			uint32[2]: 						uint32_t = 1054150923
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 79:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801012960
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 79:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801012960

Thread 0, Frame 79:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AAA0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801012960
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005B

Thread 0, Frame 79:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 80:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA88
		pFences[0]: 					const VkFence = 000000000000005B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 80:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005B

Thread 0, Frame 80:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AA88
		pFences[0]: 					const VkFence = 000000000000005B

Thread 0, Frame 80:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 80:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 80:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 80:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 80:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980100CCE0

Thread 0, Frame 80:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005C

Thread 0, Frame 80:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100CCE0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 80:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100CCE0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 80:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100CCE0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.898611
			float32[2]: 					float = 0.438746
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063652196
			int32[2]: 						int32_t = 1054909254
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063652196
			uint32[2]: 						uint32_t = 1054909254
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 80:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980100CCE0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 80:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980100CCE0

Thread 0, Frame 80:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AAC8
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980100CCE0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005C

Thread 0, Frame 80:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 81:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AAB0
		pFences[0]: 					const VkFence = 000000000000005C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 81:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005C

Thread 0, Frame 81:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AAB0
		pFences[0]: 					const VkFence = 000000000000005C

Thread 0, Frame 81:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 81:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 81:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 81:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 81:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801014080

Thread 0, Frame 81:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005D

Thread 0, Frame 81:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801014080
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 81:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014080
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 81:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014080
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.887363
			float32[2]: 					float = 0.461072
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063463480
			int32[2]: 						int32_t = 1055658387
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063463480
			uint32[2]: 						uint32_t = 1055658387
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 81:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014080
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 81:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801014080

Thread 0, Frame 81:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AAF0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801014080
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005D

Thread 0, Frame 81:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 82:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AAD8
		pFences[0]: 					const VkFence = 000000000000005D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 82:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005D

Thread 0, Frame 82:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AAD8
		pFences[0]: 					const VkFence = 000000000000005D

Thread 0, Frame 82:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 82:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 82:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 82:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 82:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801016330

Thread 0, Frame 82:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005E

Thread 0, Frame 82:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801016330
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 82:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016330
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 82:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016330
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.87556
			float32[2]: 					float = 0.483109
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063265460
			int32[2]: 						int32_t = 1056397852
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063265460
			uint32[2]: 						uint32_t = 1056397852
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 82:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016330
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 82:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801016330

Thread 0, Frame 82:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AB18
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801016330
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005E

Thread 0, Frame 82:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 83:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB00
		pFences[0]: 					const VkFence = 000000000000005E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 83:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005E

Thread 0, Frame 83:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB00
		pFences[0]: 					const VkFence = 000000000000005E

Thread 0, Frame 83:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 83:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 83:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 83:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 83:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801014C10

Thread 0, Frame 83:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000005F

Thread 0, Frame 83:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801014C10
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 83:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014C10
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 83:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014C10
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.86321
			float32[2]: 					float = 0.504845
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1063058259
			int32[2]: 						int32_t = 1057045897
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1063058259
			uint32[2]: 						uint32_t = 1057045897
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 83:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801014C10
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 83:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801014C10

Thread 0, Frame 83:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AB40
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801014C10
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000005F

Thread 0, Frame 83:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 84:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB28
		pFences[0]: 					const VkFence = 000000000000005F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 84:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000005F

Thread 0, Frame 84:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB28
		pFences[0]: 					const VkFence = 000000000000005F

Thread 0, Frame 84:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 84:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 84:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 84:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 84:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010134F0

Thread 0, Frame 84:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000060

Thread 0, Frame 84:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010134F0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 84:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010134F0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 84:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010134F0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.85032
			float32[2]: 					float = 0.526266
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062842007
			int32[2]: 						int32_t = 1057405270
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062842007
			uint32[2]: 						uint32_t = 1057405270
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 84:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010134F0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 84:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010134F0

Thread 0, Frame 84:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AB68
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010134F0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000060

Thread 0, Frame 84:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 85:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB50
		pFences[0]: 					const VkFence = 0000000000000060
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 85:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000060

Thread 0, Frame 85:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB50
		pFences[0]: 					const VkFence = 0000000000000060

Thread 0, Frame 85:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 85:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 85:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 85:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 85:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010157A0

Thread 0, Frame 85:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000061

Thread 0, Frame 85:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010157A0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 85:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010157A0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 85:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010157A0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.836899
			float32[2]: 					float = 0.547357
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062616840
			int32[2]: 						int32_t = 1057759126
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062616840
			uint32[2]: 						uint32_t = 1057759126
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 85:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010157A0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 85:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010157A0

Thread 0, Frame 85:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AB90
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010157A0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000061

Thread 0, Frame 85:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 86:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB78
		pFences[0]: 					const VkFence = 0000000000000061
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 86:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000061

Thread 0, Frame 86:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AB78
		pFences[0]: 					const VkFence = 0000000000000061

Thread 0, Frame 86:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 86:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 86:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 86:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 86:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801016EC0

Thread 0, Frame 86:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000062

Thread 0, Frame 86:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801016EC0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 86:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016EC0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 86:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016EC0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.822955
			float32[2]: 					float = 0.568106
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062382897
			int32[2]: 						int32_t = 1058107242
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062382897
			uint32[2]: 						uint32_t = 1058107242
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 86:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801016EC0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 86:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801016EC0

Thread 0, Frame 86:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5ABB8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801016EC0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000062

Thread 0, Frame 86:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 87:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABA0
		pFences[0]: 					const VkFence = 0000000000000062
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 87:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000062

Thread 0, Frame 87:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABA0
		pFences[0]: 					const VkFence = 0000000000000062

Thread 0, Frame 87:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 87:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 87:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 87:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 87:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801017A50

Thread 0, Frame 87:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000063

Thread 0, Frame 87:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801017A50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 87:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801017A50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 87:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801017A50
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.808497
			float32[2]: 					float = 0.588501
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1062140325
			int32[2]: 						int32_t = 1058449401
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1062140325
			uint32[2]: 						uint32_t = 1058449401
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 87:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801017A50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 87:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801017A50

Thread 0, Frame 87:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5ABE0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801017A50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000063

Thread 0, Frame 87:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 88:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABC8
		pFences[0]: 					const VkFence = 0000000000000063
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 88:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000063

Thread 0, Frame 88:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABC8
		pFences[0]: 					const VkFence = 0000000000000063

Thread 0, Frame 88:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 88:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 88:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 88:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 88:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801011240

Thread 0, Frame 88:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000064

Thread 0, Frame 88:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801011240
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 88:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011240
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 88:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011240
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.793533
			float32[2]: 					float = 0.608527
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061889276
			int32[2]: 						int32_t = 1058785390
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061889276
			uint32[2]: 						uint32_t = 1058785390
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 88:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801011240
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 88:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801011240

Thread 0, Frame 88:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AC08
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801011240
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000064

Thread 0, Frame 88:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 89:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABF0
		pFences[0]: 					const VkFence = 0000000000000064
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 89:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000064

Thread 0, Frame 89:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ABF0
		pFences[0]: 					const VkFence = 0000000000000064

Thread 0, Frame 89:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 89:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 89:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 89:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 89:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801019170

Thread 0, Frame 89:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000065

Thread 0, Frame 89:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801019170
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 89:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019170
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 89:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019170
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.778073
			float32[2]: 					float = 0.628173
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061629907
			int32[2]: 						int32_t = 1059114998
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061629907
			uint32[2]: 						uint32_t = 1059114998
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 89:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019170
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 89:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801019170

Thread 0, Frame 89:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AC30
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801019170
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000065

Thread 0, Frame 89:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 90:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC18
		pFences[0]: 					const VkFence = 0000000000000065
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 90:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000065

Thread 0, Frame 90:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC18
		pFences[0]: 					const VkFence = 0000000000000065

Thread 0, Frame 90:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 90:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 90:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 90:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 90:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010185E0

Thread 0, Frame 90:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000066

Thread 0, Frame 90:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010185E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 90:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010185E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 90:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010185E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.762128
			float32[2]: 					float = 0.647427
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061362379
			int32[2]: 						int32_t = 1059438020
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061362379
			uint32[2]: 						uint32_t = 1059438020
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 90:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010185E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 90:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010185E0

Thread 0, Frame 90:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AC58
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010185E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000066

Thread 0, Frame 90:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 91:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC40
		pFences[0]: 					const VkFence = 0000000000000066
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 91:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000066

Thread 0, Frame 91:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC40
		pFences[0]: 					const VkFence = 0000000000000066

Thread 0, Frame 91:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 91:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 91:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 91:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 91:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980101B420

Thread 0, Frame 91:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000067

Thread 0, Frame 91:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980101B420
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 91:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101B420
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 91:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101B420
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.745705
			float32[2]: 					float = 0.666276
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061086861
			int32[2]: 						int32_t = 1059754253
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061086861
			uint32[2]: 						uint32_t = 1059754253
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 91:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101B420
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 91:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980101B420

Thread 0, Frame 91:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5AC80
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980101B420
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000067

Thread 0, Frame 91:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 92:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC68
		pFences[0]: 					const VkFence = 0000000000000067
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 92:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000067

Thread 0, Frame 92:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC68
		pFences[0]: 					const VkFence = 0000000000000067

Thread 0, Frame 92:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 92:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 92:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 92:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 92:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801019D00

Thread 0, Frame 92:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000068

Thread 0, Frame 92:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801019D00
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 92:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019D00
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 92:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019D00
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.728817
			float32[2]: 					float = 0.684708
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060803523
			int32[2]: 						int32_t = 1060063500
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060803523
			uint32[2]: 						uint32_t = 1060063500
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 92:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801019D00
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 92:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801019D00

Thread 0, Frame 92:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5ACA8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801019D00
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000068

Thread 0, Frame 92:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 93:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC90
		pFences[0]: 					const VkFence = 0000000000000068
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 93:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000068

Thread 0, Frame 93:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5AC90
		pFences[0]: 					const VkFence = 0000000000000068

Thread 0, Frame 93:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 93:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 93:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 93:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 93:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980101A890

Thread 0, Frame 93:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000069

Thread 0, Frame 93:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980101A890
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 93:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101A890
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 93:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101A890
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.711473
			float32[2]: 					float = 0.702713
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060512543
			int32[2]: 						int32_t = 1060365568
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060512543
			uint32[2]: 						uint32_t = 1060365568
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 93:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980101A890
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 93:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980101A890

Thread 0, Frame 93:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800E5ACD0
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980101A890
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000069

Thread 0, Frame 93:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 94:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ACB8
		pFences[0]: 					const VkFence = 0000000000000069
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 94:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000069

Thread 0, Frame 94:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800E5ACB8
		pFences[0]: 					const VkFence = 0000000000000069

Thread 0, Frame 94:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 94:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 94:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 94:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 94:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980105F8C0

Thread 0, Frame 94:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006A

Thread 0, Frame 94:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105F8C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 94:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105F8C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 94:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105F8C0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.693685
			float32[2]: 					float = 0.720278
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060214104
			int32[2]: 						int32_t = 1060660267
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060214104
			uint32[2]: 						uint32_t = 1060660267
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 94:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105F8C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 94:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105F8C0

Thread 0, Frame 94:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F73F68
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980105F8C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006A

Thread 0, Frame 94:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 95:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73F50
		pFences[0]: 					const VkFence = 000000000000006A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 95:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006A

Thread 0, Frame 95:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73F50
		pFences[0]: 					const VkFence = 000000000000006A

Thread 0, Frame 95:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 95:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 95:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 95:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 95:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010649B0

Thread 0, Frame 95:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006B

Thread 0, Frame 95:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010649B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 95:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010649B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 95:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010649B0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.675463
			float32[2]: 					float = 0.737394
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059908391
			int32[2]: 						int32_t = 1060947415
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059908391
			uint32[2]: 						uint32_t = 1060947415
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 95:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010649B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 95:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010649B0

Thread 0, Frame 95:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F73F90
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010649B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006B

Thread 0, Frame 95:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 96:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73F78
		pFences[0]: 					const VkFence = 000000000000006B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 96:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006B

Thread 0, Frame 96:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73F78
		pFences[0]: 					const VkFence = 000000000000006B

Thread 0, Frame 96:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 96:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 96:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 96:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 96:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801063290

Thread 0, Frame 96:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006C

Thread 0, Frame 96:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801063290
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 96:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063290
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 96:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063290
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.656819
			float32[2]: 					float = 0.754048
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059595595
			int32[2]: 						int32_t = 1061226830
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059595595
			uint32[2]: 						uint32_t = 1061226830
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 96:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063290
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 96:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801063290

Thread 0, Frame 96:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F73FB8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801063290
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006C

Thread 0, Frame 96:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 97:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FA0
		pFences[0]: 					const VkFence = 000000000000006C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 97:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006C

Thread 0, Frame 97:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FA0
		pFences[0]: 					const VkFence = 000000000000006C

Thread 0, Frame 97:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 97:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 97:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 97:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 97:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801060FE0

Thread 0, Frame 97:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006D

Thread 0, Frame 97:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801060FE0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 97:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060FE0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 97:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060FE0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.637764
			float32[2]: 					float = 0.770231
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059275912
			int32[2]: 						int32_t = 1061498339
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059275912
			uint32[2]: 						uint32_t = 1061498339
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 97:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060FE0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 97:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801060FE0

Thread 0, Frame 97:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F73FE0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801060FE0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006D

Thread 0, Frame 97:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 98:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FC8
		pFences[0]: 					const VkFence = 000000000000006D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 98:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006D

Thread 0, Frame 98:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FC8
		pFences[0]: 					const VkFence = 000000000000006D

Thread 0, Frame 98:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 98:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 98:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 98:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 98:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980105E1A0

Thread 0, Frame 98:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006E

Thread 0, Frame 98:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105E1A0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 98:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105E1A0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 98:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105E1A0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.618311
			float32[2]: 					float = 0.785933
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058949543
			int32[2]: 						int32_t = 1061761772
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058949543
			uint32[2]: 						uint32_t = 1061761772
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 98:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105E1A0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 98:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105E1A0

Thread 0, Frame 98:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74008
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980105E1A0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006E

Thread 0, Frame 98:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 99:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FF0
		pFences[0]: 					const VkFence = 000000000000006E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 99:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006E

Thread 0, Frame 99:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F73FF0
		pFences[0]: 					const VkFence = 000000000000006E

Thread 0, Frame 99:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 99:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 99:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 99:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 99:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801065540

Thread 0, Frame 99:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000006F

Thread 0, Frame 99:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801065540
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 99:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801065540
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 99:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801065540
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.598472
			float32[2]: 					float = 0.801144
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058616690
			int32[2]: 						int32_t = 1062016964
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058616690
			uint32[2]: 						uint32_t = 1062016964
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 99:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801065540
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 99:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801065540

Thread 0, Frame 99:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74030
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801065540
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000006F

Thread 0, Frame 99:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 100:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74018
		pFences[0]: 					const VkFence = 000000000000006F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 100:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000006F

Thread 0, Frame 100:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74018
		pFences[0]: 					const VkFence = 000000000000006F

Thread 0, Frame 100:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 100:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 100:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 100:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 100:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980105ED30

Thread 0, Frame 100:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000070

Thread 0, Frame 100:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105ED30
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 100:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105ED30
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 100:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105ED30
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.578258
			float32[2]: 					float = 0.815854
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058277562
			int32[2]: 						int32_t = 1062263756
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058277562
			uint32[2]: 						uint32_t = 1062263756
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 100:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980105ED30
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 100:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980105ED30

Thread 0, Frame 100:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74058
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980105ED30
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000070

Thread 0, Frame 100:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 101:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74040
		pFences[0]: 					const VkFence = 0000000000000070
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 101:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000070

Thread 0, Frame 101:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74040
		pFences[0]: 					const VkFence = 0000000000000070

Thread 0, Frame 101:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 101:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 101:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 101:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 101:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801063E20

Thread 0, Frame 101:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000071

Thread 0, Frame 101:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801063E20
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 101:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063E20
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 101:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063E20
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.557683
			float32[2]: 					float = 0.830054
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057932371
			int32[2]: 						int32_t = 1062501994
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057932371
			uint32[2]: 						uint32_t = 1062501994
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 101:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801063E20
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 101:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801063E20

Thread 0, Frame 101:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74080
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801063E20
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000071

Thread 0, Frame 101:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 102:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74068
		pFences[0]: 					const VkFence = 0000000000000071
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 102:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000071

Thread 0, Frame 102:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74068
		pFences[0]: 					const VkFence = 0000000000000071

Thread 0, Frame 102:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 102:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 102:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 102:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 102:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010660D0

Thread 0, Frame 102:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000072

Thread 0, Frame 102:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010660D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 102:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010660D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 102:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010660D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.53676
			float32[2]: 					float = 0.843735
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057581332
			int32[2]: 						int32_t = 1062731528
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057581332
			uint32[2]: 						uint32_t = 1062731528
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 102:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010660D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 102:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010660D0

Thread 0, Frame 102:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F740A8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010660D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000072

Thread 0, Frame 102:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 103:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74090
		pFences[0]: 					const VkFence = 0000000000000072
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 103:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000072

Thread 0, Frame 103:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74090
		pFences[0]: 					const VkFence = 0000000000000072

Thread 0, Frame 103:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 103:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 103:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 103:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 103:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801066C60

Thread 0, Frame 103:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000073

Thread 0, Frame 103:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801066C60
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 103:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801066C60
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 103:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801066C60
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.515501
			float32[2]: 					float = 0.856889
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057224666
			int32[2]: 						int32_t = 1062952215
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057224666
			uint32[2]: 						uint32_t = 1062952215
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 103:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801066C60
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 103:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801066C60

Thread 0, Frame 103:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F740D0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801066C60
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000073

Thread 0, Frame 103:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 104:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F740B8
		pFences[0]: 					const VkFence = 0000000000000073
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 104:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000073

Thread 0, Frame 104:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F740B8
		pFences[0]: 					const VkFence = 0000000000000073

Thread 0, Frame 104:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 104:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 104:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 104:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 104:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801060450

Thread 0, Frame 104:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000074

Thread 0, Frame 104:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801060450
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 104:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060450
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 104:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060450
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.493919
			float32[2]: 					float = 0.869508
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1056760579
			int32[2]: 						int32_t = 1063163918
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1056760579
			uint32[2]: 						uint32_t = 1063163918
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 104:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801060450
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 104:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801060450

Thread 0, Frame 104:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F740F8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801060450
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000074

Thread 0, Frame 104:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 105:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F740E0
		pFences[0]: 					const VkFence = 0000000000000074
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 105:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000074

Thread 0, Frame 105:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F740E0
		pFences[0]: 					const VkFence = 0000000000000074

Thread 0, Frame 105:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 105:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 105:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 105:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 105:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801062700

Thread 0, Frame 105:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000075

Thread 0, Frame 105:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801062700
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 105:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801062700
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 105:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801062700
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.47203
			float32[2]: 					float = 0.881583
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1056026078
			int32[2]: 						int32_t = 1063366503
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1056026078
			uint32[2]: 						uint32_t = 1063366503
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 105:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801062700
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 105:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801062700

Thread 0, Frame 105:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74120
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801062700
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000075

Thread 0, Frame 105:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 106:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74108
		pFences[0]: 					const VkFence = 0000000000000075
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 106:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000075

Thread 0, Frame 106:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74108
		pFences[0]: 					const VkFence = 0000000000000075

Thread 0, Frame 106:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 106:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 106:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 106:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 106:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801061B70

Thread 0, Frame 106:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000076

Thread 0, Frame 106:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801061B70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 106:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801061B70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 106:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801061B70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.449845
			float32[2]: 					float = 0.893107
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1055281677
			int32[2]: 						int32_t = 1063559845
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1055281677
			uint32[2]: 						uint32_t = 1063559845
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 106:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801061B70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 106:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801061B70

Thread 0, Frame 106:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74148
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801061B70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000076

Thread 0, Frame 106:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 107:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74130
		pFences[0]: 					const VkFence = 0000000000000076
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 107:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000076

Thread 0, Frame 107:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74130
		pFences[0]: 					const VkFence = 0000000000000076

Thread 0, Frame 107:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 107:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 107:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 107:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 107:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801068380

Thread 0, Frame 107:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000077

Thread 0, Frame 107:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801068380
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 107:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068380
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 107:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068380
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.427379
			float32[2]: 					float = 0.904073
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1054527844
			int32[2]: 						int32_t = 1063743822
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1054527844
			uint32[2]: 						uint32_t = 1063743822
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 107:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068380
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 107:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801068380

Thread 0, Frame 107:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74170
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801068380
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000077

Thread 0, Frame 107:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 108:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74158
		pFences[0]: 					const VkFence = 0000000000000077
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 108:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000077

Thread 0, Frame 108:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74158
		pFences[0]: 					const VkFence = 0000000000000077

Thread 0, Frame 108:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 108:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 108:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 108:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 108:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980106C8E0

Thread 0, Frame 108:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000078

Thread 0, Frame 108:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106C8E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 108:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106C8E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 108:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106C8E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.404646
			float32[2]: 					float = 0.914474
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1053765047
			int32[2]: 						int32_t = 1063918320
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1053765047
			uint32[2]: 						uint32_t = 1063918320
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 108:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106C8E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 108:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106C8E0

Thread 0, Frame 108:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74198
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980106C8E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000078

Thread 0, Frame 108:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 109:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74180
		pFences[0]: 					const VkFence = 0000000000000078
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 109:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000078

Thread 0, Frame 109:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74180
		pFences[0]: 					const VkFence = 0000000000000078

Thread 0, Frame 109:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 109:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 109:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 109:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 109:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801068F10

Thread 0, Frame 109:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000079

Thread 0, Frame 109:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801068F10
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 109:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068F10
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 109:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068F10
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.38166
			float32[2]: 					float = 0.924303
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1052993765
			int32[2]: 						int32_t = 1064083230
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1052993765
			uint32[2]: 						uint32_t = 1064083230
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 109:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801068F10
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 109:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801068F10

Thread 0, Frame 109:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F741C0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801068F10
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000079

Thread 0, Frame 109:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 110:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741A8
		pFences[0]: 					const VkFence = 0000000000000079
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 110:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000079

Thread 0, Frame 110:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741A8
		pFences[0]: 					const VkFence = 0000000000000079

Thread 0, Frame 110:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 110:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 110:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 110:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 110:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980106BD50

Thread 0, Frame 110:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007A

Thread 0, Frame 110:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106BD50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 110:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106BD50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 110:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106BD50
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.358435
			float32[2]: 					float = 0.933555
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1052214480
			int32[2]: 						int32_t = 1064238448
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1052214480
			uint32[2]: 						uint32_t = 1064238448
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 110:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106BD50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 110:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106BD50

Thread 0, Frame 110:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F741E8
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980106BD50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007A

Thread 0, Frame 110:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 111:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741D0
		pFences[0]: 					const VkFence = 000000000000007A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 111:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007A

Thread 0, Frame 111:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741D0
		pFences[0]: 					const VkFence = 000000000000007A

Thread 0, Frame 111:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 111:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 111:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 111:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 111:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980106D470

Thread 0, Frame 111:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007B

Thread 0, Frame 111:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106D470
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 111:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106D470
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 111:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106D470
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.334987
			float32[2]: 					float = 0.942223
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1051427678
			int32[2]: 						int32_t = 1064383877
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1051427678
			uint32[2]: 						uint32_t = 1064383877
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 111:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106D470
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 111:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106D470

Thread 0, Frame 111:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74210
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980106D470
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007B

Thread 0, Frame 111:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 112:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741F8
		pFences[0]: 					const VkFence = 000000000000007B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 112:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007B

Thread 0, Frame 112:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F741F8
		pFences[0]: 					const VkFence = 000000000000007B

Thread 0, Frame 112:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 112:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 112:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 112:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 112:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801069AA0

Thread 0, Frame 112:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007C

Thread 0, Frame 112:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801069AA0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 112:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801069AA0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 112:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801069AA0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.311329
			float32[2]: 					float = 0.950302
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1050633851
			int32[2]: 						int32_t = 1064519427
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1050633851
			uint32[2]: 						uint32_t = 1064519427
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 112:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801069AA0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 112:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801069AA0

Thread 0, Frame 112:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74238
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801069AA0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007C

Thread 0, Frame 112:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 113:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74220
		pFences[0]: 					const VkFence = 000000000000007C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 113:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007C

Thread 0, Frame 113:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74220
		pFences[0]: 					const VkFence = 000000000000007C

Thread 0, Frame 113:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 113:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 113:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 113:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 113:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980106A630

Thread 0, Frame 113:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007D

Thread 0, Frame 113:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106A630
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 113:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106A630
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 113:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106A630
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.287476
			float32[2]: 					float = 0.957788
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1049833495
			int32[2]: 						int32_t = 1064645012
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1049833495
			uint32[2]: 						uint32_t = 1064645012
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 113:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106A630
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 113:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106A630

Thread 0, Frame 113:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74260
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980106A630
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007D

Thread 0, Frame 113:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 114:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74248
		pFences[0]: 					const VkFence = 000000000000007D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 114:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007D

Thread 0, Frame 114:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74248
		pFences[0]: 					const VkFence = 000000000000007D

Thread 0, Frame 114:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 114:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 114:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 114:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 114:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010677F0

Thread 0, Frame 114:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007E

Thread 0, Frame 114:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010677F0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 114:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010677F0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 114:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010677F0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.263444
			float32[2]: 					float = 0.964675
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1049027111
			int32[2]: 						int32_t = 1064760555
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1049027111
			uint32[2]: 						uint32_t = 1064760555
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 114:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010677F0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 114:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010677F0

Thread 0, Frame 114:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74288
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010677F0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007E

Thread 0, Frame 114:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 115:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74270
		pFences[0]: 					const VkFence = 000000000000007E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 115:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007E

Thread 0, Frame 115:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74270
		pFences[0]: 					const VkFence = 000000000000007E

Thread 0, Frame 115:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 115:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 115:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 115:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 115:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980106B1C0

Thread 0, Frame 115:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000007F

Thread 0, Frame 115:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106B1C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 115:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106B1C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 115:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106B1C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.239247
			float32[2]: 					float = 0.970959
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1047854404
			int32[2]: 						int32_t = 1064865983
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1047854404
			uint32[2]: 						uint32_t = 1064865983
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 115:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980106B1C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 115:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980106B1C0

Thread 0, Frame 115:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F742B0
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980106B1C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000007F

Thread 0, Frame 115:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 116:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74298
		pFences[0]: 					const VkFence = 000000000000007F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 116:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000007F

Thread 0, Frame 116:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74298
		pFences[0]: 					const VkFence = 000000000000007F

Thread 0, Frame 116:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 116:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 116:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 116:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 116:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B91D0

Thread 0, Frame 116:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000080

Thread 0, Frame 116:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B91D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 116:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B91D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 116:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B91D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.214901
			float32[2]: 					float = 0.976636
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1046220552
			int32[2]: 						int32_t = 1064961230
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1046220552
			uint32[2]: 						uint32_t = 1064961230
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 116:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B91D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 116:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B91D0

Thread 0, Frame 116:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F742D8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B91D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000080

Thread 0, Frame 116:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 117:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F742C0
		pFences[0]: 					const VkFence = 0000000000000080
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 117:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000080

Thread 0, Frame 117:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F742C0
		pFences[0]: 					const VkFence = 0000000000000080

Thread 0, Frame 117:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 117:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 117:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 117:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 117:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BA8F0

Thread 0, Frame 117:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000081

Thread 0, Frame 117:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BA8F0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 117:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BA8F0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 117:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BA8F0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.19042
			float32[2]: 					float = 0.981703
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1044577687
			int32[2]: 						int32_t = 1065046237
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1044577687
			uint32[2]: 						uint32_t = 1065046237
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 117:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BA8F0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 117:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BA8F0

Thread 0, Frame 117:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74300
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BA8F0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000081

Thread 0, Frame 117:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 118:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F742E8
		pFences[0]: 					const VkFence = 0000000000000081
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 118:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000081

Thread 0, Frame 118:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F742E8
		pFences[0]: 					const VkFence = 0000000000000081

Thread 0, Frame 118:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 118:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 118:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 118:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 118:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B9D60

Thread 0, Frame 118:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000082

Thread 0, Frame 118:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B9D60
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 118:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B9D60
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 118:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B9D60
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.165821
			float32[2]: 					float = 0.986156
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1042926835
			int32[2]: 						int32_t = 1065120950
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1042926835
			uint32[2]: 						uint32_t = 1065120950
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 118:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B9D60
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 118:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B9D60

Thread 0, Frame 118:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74328
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B9D60
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000082

Thread 0, Frame 118:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 119:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74310
		pFences[0]: 					const VkFence = 0000000000000082
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 119:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000082

Thread 0, Frame 119:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74310
		pFences[0]: 					const VkFence = 0000000000000082

Thread 0, Frame 119:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 119:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 119:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 119:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 119:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B40E0

Thread 0, Frame 119:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000083

Thread 0, Frame 119:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B40E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 119:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B40E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 119:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B40E0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.141118
			float32[2]: 					float = 0.989993
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1041269029
			int32[2]: 						int32_t = 1065185324
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1041269029
			uint32[2]: 						uint32_t = 1065185324
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 119:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B40E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 119:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B40E0

Thread 0, Frame 119:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74350
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B40E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000083

Thread 0, Frame 119:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 120:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74338
		pFences[0]: 					const VkFence = 0000000000000083
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 120:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000083

Thread 0, Frame 120:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74338
		pFences[0]: 					const VkFence = 0000000000000083

Thread 0, Frame 120:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 120:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 120:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 120:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 120:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B7AB0

Thread 0, Frame 120:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000084

Thread 0, Frame 120:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B7AB0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 120:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B7AB0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 120:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B7AB0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.116326
			float32[2]: 					float = 0.993211
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1039023216
			int32[2]: 						int32_t = 1065239317
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1039023216
			uint32[2]: 						uint32_t = 1065239317
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 120:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B7AB0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 120:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B7AB0

Thread 0, Frame 120:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74378
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B7AB0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000084

Thread 0, Frame 120:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 121:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74360
		pFences[0]: 					const VkFence = 0000000000000084
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 121:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000084

Thread 0, Frame 121:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74360
		pFences[0]: 					const VkFence = 0000000000000084

Thread 0, Frame 121:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 121:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 121:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 121:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 121:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BB480

Thread 0, Frame 121:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000085

Thread 0, Frame 121:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BB480
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 121:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BB480
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 121:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BB480
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0914621
			float32[2]: 					float = 0.995809
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1035686008
			int32[2]: 						int32_t = 1065282895
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1035686008
			uint32[2]: 						uint32_t = 1065282895
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 121:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BB480
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 121:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BB480

Thread 0, Frame 121:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F743A0
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BB480
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000085

Thread 0, Frame 121:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 122:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74388
		pFences[0]: 					const VkFence = 0000000000000085
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 122:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000085

Thread 0, Frame 122:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74388
		pFences[0]: 					const VkFence = 0000000000000085

Thread 0, Frame 122:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 122:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 122:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 122:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 122:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B4C70

Thread 0, Frame 122:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000086

Thread 0, Frame 122:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B4C70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 122:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B4C70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 122:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B4C70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0665408
			float32[2]: 					float = 0.997784
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1032341129
			int32[2]: 						int32_t = 1065316033
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1032341129
			uint32[2]: 						uint32_t = 1065316033
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 122:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B4C70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 122:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B4C70

Thread 0, Frame 122:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F743C8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B4C70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000086

Thread 0, Frame 122:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 123:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F743B0
		pFences[0]: 					const VkFence = 0000000000000086
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 123:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000086

Thread 0, Frame 123:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F743B0
		pFences[0]: 					const VkFence = 0000000000000086

Thread 0, Frame 123:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 123:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 123:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 123:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 123:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B8640

Thread 0, Frame 123:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000087

Thread 0, Frame 123:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B8640
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 123:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B8640
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 123:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B8640
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0415779
			float32[2]: 					float = 0.999135
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1026182550
			int32[2]: 						int32_t = 1065338708
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1026182550
			uint32[2]: 						uint32_t = 1065338708
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 123:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B8640
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 123:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B8640

Thread 0, Frame 123:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F743F0
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B8640
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000087

Thread 0, Frame 123:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 124:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F743D8
		pFences[0]: 					const VkFence = 0000000000000087
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 124:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000087

Thread 0, Frame 124:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F743D8
		pFences[0]: 					const VkFence = 0000000000000087

Thread 0, Frame 124:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 124:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 124:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 124:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 124:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BC010

Thread 0, Frame 124:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000088

Thread 0, Frame 124:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BC010
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 124:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BC010
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 124:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BC010
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.016589
			float32[2]: 					float = 0.999862
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1015539129
			int32[2]: 						int32_t = 1065350907
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1015539129
			uint32[2]: 						uint32_t = 1065350907
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 124:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BC010
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 124:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BC010

Thread 0, Frame 124:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74418
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BC010
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000088

Thread 0, Frame 124:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 125:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74400
		pFences[0]: 					const VkFence = 0000000000000088
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 125:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000088

Thread 0, Frame 125:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74400
		pFences[0]: 					const VkFence = 0000000000000088

Thread 0, Frame 125:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 125:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 125:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 125:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 125:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B5800

Thread 0, Frame 125:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000089

Thread 0, Frame 125:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B5800
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 125:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B5800
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 125:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B5800
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0084102
			float32[2]: 					float = 0.999965
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1007274739
			int32[2]: 						int32_t = 1065352623
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1007274739
			uint32[2]: 						uint32_t = 1065352623
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 125:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B5800
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 125:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B5800

Thread 0, Frame 125:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74440
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B5800
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000089

Thread 0, Frame 125:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 126:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74428
		pFences[0]: 					const VkFence = 0000000000000089
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 126:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000089

Thread 0, Frame 126:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74428
		pFences[0]: 					const VkFence = 0000000000000089

Thread 0, Frame 126:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 126:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 126:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 126:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 126:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B6390

Thread 0, Frame 126:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008A

Thread 0, Frame 126:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B6390
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 126:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6390
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 126:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6390
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0334042
			float32[2]: 					float = 0.999442
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1023988435
			int32[2]: 						int32_t = 1065343853
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1023988435
			uint32[2]: 						uint32_t = 1065343853
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 126:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6390
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 126:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B6390

Thread 0, Frame 126:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74468
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B6390
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008A

Thread 0, Frame 126:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 127:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74450
		pFences[0]: 					const VkFence = 000000000000008A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 127:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008A

Thread 0, Frame 127:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74450
		pFences[0]: 					const VkFence = 000000000000008A

Thread 0, Frame 127:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 127:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 127:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 127:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 127:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BD730

Thread 0, Frame 127:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008B

Thread 0, Frame 127:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BD730
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 127:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BD730
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 127:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BD730
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0583773
			float32[2]: 					float = 0.998295
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1030692101
			int32[2]: 						int32_t = 1065324604
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1030692101
			uint32[2]: 						uint32_t = 1065324604
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 127:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BD730
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 127:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BD730

Thread 0, Frame 127:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74490
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BD730
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008B

Thread 0, Frame 127:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 128:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74478
		pFences[0]: 					const VkFence = 000000000000008B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 128:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008B

Thread 0, Frame 128:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74478
		pFences[0]: 					const VkFence = 000000000000008B

Thread 0, Frame 128:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 128:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 128:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 128:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 128:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BCBA0

Thread 0, Frame 128:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008C

Thread 0, Frame 128:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BCBA0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 128:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BCBA0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 128:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BCBA0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.0833139
			float32[2]: 					float = 0.996523
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1034592379
			int32[2]: 						int32_t = 1065294888
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1034592379
			uint32[2]: 						uint32_t = 1065294888
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 128:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BCBA0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 128:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BCBA0

Thread 0, Frame 128:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F744B8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BCBA0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008C

Thread 0, Frame 128:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 129:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744A0
		pFences[0]: 					const VkFence = 000000000000008C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 129:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008C

Thread 0, Frame 129:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744A0
		pFences[0]: 					const VkFence = 000000000000008C

Thread 0, Frame 129:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 129:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 129:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 129:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 129:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010B6F20

Thread 0, Frame 129:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008D

Thread 0, Frame 129:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B6F20
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 129:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6F20
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 129:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6F20
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.108198
			float32[2]: 					float = 0.994129
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1037932327
			int32[2]: 						int32_t = 1065254722
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1037932327
			uint32[2]: 						uint32_t = 1065254722
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 129:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010B6F20
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 129:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010B6F20

Thread 0, Frame 129:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F744E0
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010B6F20
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008D

Thread 0, Frame 129:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 130:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744C8
		pFences[0]: 					const VkFence = 000000000000008D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 130:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008D

Thread 0, Frame 130:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744C8
		pFences[0]: 					const VkFence = 000000000000008D

Thread 0, Frame 130:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 130:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 130:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 130:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 130:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BEE50

Thread 0, Frame 130:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008E

Thread 0, Frame 130:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BEE50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 130:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BEE50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 130:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BEE50
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.133015
			float32[2]: 					float = 0.991114
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1040725295
			int32[2]: 						int32_t = 1065204133
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1040725295
			uint32[2]: 						uint32_t = 1065204133
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 130:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BEE50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 130:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BEE50

Thread 0, Frame 130:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74508
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BEE50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008E

Thread 0, Frame 130:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 131:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744F0
		pFences[0]: 					const VkFence = 000000000000008E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 131:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008E

Thread 0, Frame 131:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F744F0
		pFences[0]: 					const VkFence = 000000000000008E

Thread 0, Frame 131:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 131:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 131:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 131:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 131:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010C0570

Thread 0, Frame 131:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000008F

Thread 0, Frame 131:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C0570
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 131:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C0570
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 131:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C0570
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.157749
			float32[2]: 					float = 0.987479
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1042385152
			int32[2]: 						int32_t = 1065143152
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1042385152
			uint32[2]: 						uint32_t = 1065143152
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 131:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C0570
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 131:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C0570

Thread 0, Frame 131:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74530
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010C0570
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000008F

Thread 0, Frame 131:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 132:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74518
		pFences[0]: 					const VkFence = 000000000000008F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 132:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000008F

Thread 0, Frame 132:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74518
		pFences[0]: 					const VkFence = 000000000000008F

Thread 0, Frame 132:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 132:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 132:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 132:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 132:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010C33B0

Thread 0, Frame 132:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000090

Thread 0, Frame 132:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C33B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 132:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C33B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 132:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C33B0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.182384
			float32[2]: 					float = 0.983227
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1044038393
			int32[2]: 						int32_t = 1065071817
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1044038393
			uint32[2]: 						uint32_t = 1065071817
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 132:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C33B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 132:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C33B0

Thread 0, Frame 132:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74558
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010C33B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000090

Thread 0, Frame 132:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 133:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74540
		pFences[0]: 					const VkFence = 0000000000000090
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 133:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000090

Thread 0, Frame 133:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74540
		pFences[0]: 					const VkFence = 0000000000000090

Thread 0, Frame 133:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 133:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 133:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 133:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 133:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010C2820

Thread 0, Frame 133:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000091

Thread 0, Frame 133:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C2820
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 133:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C2820
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 133:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C2820
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.206906
			float32[2]: 					float = 0.978361
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1045683984
			int32[2]: 						int32_t = 1064990172
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1045683984
			uint32[2]: 						uint32_t = 1064990172
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 133:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C2820
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 133:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C2820

Thread 0, Frame 133:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74580
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010C2820
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000091

Thread 0, Frame 133:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 134:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74568
		pFences[0]: 					const VkFence = 0000000000000091
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 134:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000091

Thread 0, Frame 134:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74568
		pFences[0]: 					const VkFence = 0000000000000091

Thread 0, Frame 134:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 134:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 134:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 134:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 134:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BE2C0

Thread 0, Frame 134:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000092

Thread 0, Frame 134:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BE2C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 134:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BE2C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 134:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BE2C0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.231298
			float32[2]: 					float = 0.972883
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1047320898
			int32[2]: 						int32_t = 1064898269
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1047320898
			uint32[2]: 						uint32_t = 1064898269
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 134:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BE2C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 134:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BE2C0

Thread 0, Frame 134:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F745A8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BE2C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000092

Thread 0, Frame 134:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 135:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74590
		pFences[0]: 					const VkFence = 0000000000000092
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 135:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000092

Thread 0, Frame 135:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74590
		pFences[0]: 					const VkFence = 0000000000000092

Thread 0, Frame 135:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 135:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 135:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 135:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 135:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010C1C90

Thread 0, Frame 135:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000093

Thread 0, Frame 135:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C1C90
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 135:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1C90
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 135:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1C90
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.255545
			float32[2]: 					float = 0.966797
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1048762055
			int32[2]: 						int32_t = 1064796165
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1048762055
			uint32[2]: 						uint32_t = 1064796165
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 135:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1C90
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 135:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C1C90

Thread 0, Frame 135:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F745D0
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010C1C90
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000093

Thread 0, Frame 135:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 136:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F745B8
		pFences[0]: 					const VkFence = 0000000000000093
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 136:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000093

Thread 0, Frame 136:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F745B8
		pFences[0]: 					const VkFence = 0000000000000093

Thread 0, Frame 136:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 136:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 136:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 136:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 136:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010BF9E0

Thread 0, Frame 136:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000094

Thread 0, Frame 136:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BF9E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 136:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BF9E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 136:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BF9E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.279633
			float32[2]: 					float = 0.960107
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1049570303
			int32[2]: 						int32_t = 1064683924
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1049570303
			uint32[2]: 						uint32_t = 1064683924
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 136:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010BF9E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 136:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010BF9E0

Thread 0, Frame 136:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F745F8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010BF9E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000094

Thread 0, Frame 136:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 137:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F745E0
		pFences[0]: 					const VkFence = 0000000000000094
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 137:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000094

Thread 0, Frame 137:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F745E0
		pFences[0]: 					const VkFence = 0000000000000094

Thread 0, Frame 137:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 137:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 137:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 137:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 137:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198010C1100

Thread 0, Frame 137:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000095

Thread 0, Frame 137:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C1100
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 137:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1100
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 137:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1100
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.303545
			float32[2]: 					float = 0.952817
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1050372686
			int32[2]: 						int32_t = 1064561616
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1050372686
			uint32[2]: 						uint32_t = 1064561616
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 137:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198010C1100
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 137:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198010C1100

Thread 0, Frame 137:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74620
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198010C1100
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000095

Thread 0, Frame 137:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 138:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74608
		pFences[0]: 					const VkFence = 0000000000000095
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 138:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000095

Thread 0, Frame 138:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74608
		pFences[0]: 					const VkFence = 0000000000000095

Thread 0, Frame 138:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 138:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 138:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 138:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 138:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801111A90

Thread 0, Frame 138:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000096

Thread 0, Frame 138:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801111A90
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 138:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801111A90
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 138:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801111A90
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.327269
			float32[2]: 					float = 0.944931
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1051168704
			int32[2]: 						int32_t = 1064429317
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1051168704
			uint32[2]: 						uint32_t = 1064429317
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 138:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801111A90
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 138:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801111A90

Thread 0, Frame 138:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74648
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801111A90
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000096

Thread 0, Frame 138:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 139:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74630
		pFences[0]: 					const VkFence = 0000000000000096
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 139:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000096

Thread 0, Frame 139:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74630
		pFences[0]: 					const VkFence = 0000000000000096

Thread 0, Frame 139:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 139:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 139:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 139:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 139:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980110EC50

Thread 0, Frame 139:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000097

Thread 0, Frame 139:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110EC50
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 139:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110EC50
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 139:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110EC50
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.350787
			float32[2]: 					float = 0.936455
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1051957859
			int32[2]: 						int32_t = 1064287111
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1051957859
			uint32[2]: 						uint32_t = 1064287111
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 139:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110EC50
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 139:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110EC50

Thread 0, Frame 139:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74670
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980110EC50
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000097

Thread 0, Frame 139:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 140:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74658
		pFences[0]: 					const VkFence = 0000000000000097
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 140:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000097

Thread 0, Frame 140:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74658
		pFences[0]: 					const VkFence = 0000000000000097

Thread 0, Frame 140:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 140:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 140:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 140:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 140:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980110F7E0

Thread 0, Frame 140:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000098

Thread 0, Frame 140:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110F7E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 140:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110F7E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 140:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110F7E0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.374087
			float32[2]: 					float = 0.927394
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1052739657
			int32[2]: 						int32_t = 1064135085
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1052739657
			uint32[2]: 						uint32_t = 1064135085
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 140:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110F7E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 140:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110F7E0

Thread 0, Frame 140:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 0000019800F74698
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980110F7E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000098

Thread 0, Frame 140:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 141:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74680
		pFences[0]: 					const VkFence = 0000000000000098
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 141:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000098

Thread 0, Frame 141:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 0000019800F74680
		pFences[0]: 					const VkFence = 0000000000000098

Thread 0, Frame 141:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 141:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 141:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 141:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 141:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801112620

Thread 0, Frame 141:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 0000000000000099

Thread 0, Frame 141:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801112620
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 141:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801112620
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 141:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801112620
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.397152
			float32[2]: 					float = 0.917753
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1053513611
			int32[2]: 						int32_t = 1063973336
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1053513611
			uint32[2]: 						uint32_t = 1063973336
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 141:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801112620
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 141:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801112620

Thread 0, Frame 141:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F6A0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801112620
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 0000000000000099

Thread 0, Frame 141:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 142:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F688
		pFences[0]: 					const VkFence = 0000000000000099
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 142:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 0000000000000099

Thread 0, Frame 142:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F688
		pFences[0]: 					const VkFence = 0000000000000099

Thread 0, Frame 142:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 142:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 142:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 142:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 142:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198011131B0

Thread 0, Frame 142:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009A

Thread 0, Frame 142:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011131B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 142:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011131B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 142:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011131B0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.41997
			float32[2]: 					float = 0.907538
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1054279236
			int32[2]: 						int32_t = 1063801963
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1054279236
			uint32[2]: 						uint32_t = 1063801963
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 142:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011131B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 142:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011131B0

Thread 0, Frame 142:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F6C8
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198011131B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009A

Thread 0, Frame 142:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 143:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F6B0
		pFences[0]: 					const VkFence = 000000000000009A
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 143:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009A

Thread 0, Frame 143:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F6B0
		pFences[0]: 					const VkFence = 000000000000009A

Thread 0, Frame 143:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 143:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 143:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 143:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 143:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980110E0C0

Thread 0, Frame 143:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009B

Thread 0, Frame 143:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110E0C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 143:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110E0C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 143:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110E0C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.442525
			float32[2]: 					float = 0.896756
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1055036055
			int32[2]: 						int32_t = 1063621075
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1055036055
			uint32[2]: 						uint32_t = 1063621075
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 143:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980110E0C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 143:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980110E0C0

Thread 0, Frame 143:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F6F0
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980110E0C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009B

Thread 0, Frame 143:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 144:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F6D8
		pFences[0]: 					const VkFence = 000000000000009B
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 144:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009B

Thread 0, Frame 144:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F6D8
		pFences[0]: 					const VkFence = 000000000000009B

Thread 0, Frame 144:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 144:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 144:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 144:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 144:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801113D40

Thread 0, Frame 144:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009C

Thread 0, Frame 144:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801113D40
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 144:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801113D40
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 144:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801113D40
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.464803
			float32[2]: 					float = 0.885414
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1055783593
			int32[2]: 						int32_t = 1063430784
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1055783593
			uint32[2]: 						uint32_t = 1063430784
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 144:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801113D40
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 144:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801113D40

Thread 0, Frame 144:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F718
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801113D40
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009C

Thread 0, Frame 144:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 145:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F700
		pFences[0]: 					const VkFence = 000000000000009C
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 145:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009C

Thread 0, Frame 145:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F700
		pFences[0]: 					const VkFence = 000000000000009C

Thread 0, Frame 145:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 145:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 145:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 145:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 145:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801110370

Thread 0, Frame 145:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009D

Thread 0, Frame 145:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801110370
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 145:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110370
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 145:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110370
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.486791
			float32[2]: 					float = 0.873519
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1056521384
			int32[2]: 						int32_t = 1063231209
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1056521384
			uint32[2]: 						uint32_t = 1063231209
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 145:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110370
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 145:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801110370

Thread 0, Frame 145:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F740
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801110370
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009D

Thread 0, Frame 145:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 146:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F728
		pFences[0]: 					const VkFence = 000000000000009D
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 146:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009D

Thread 0, Frame 146:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F728
		pFences[0]: 					const VkFence = 000000000000009D

Thread 0, Frame 146:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 146:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 146:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 146:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 146:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198011148D0

Thread 0, Frame 146:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009E

Thread 0, Frame 146:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011148D0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 146:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011148D0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 146:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011148D0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.508475
			float32[2]: 					float = 0.861077
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057106787
			int32[2]: 						int32_t = 1063022475
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057106787
			uint32[2]: 						uint32_t = 1063022475
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 146:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011148D0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 146:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011148D0

Thread 0, Frame 146:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F768
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198011148D0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009E

Thread 0, Frame 146:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 147:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F750
		pFences[0]: 					const VkFence = 000000000000009E
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 147:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009E

Thread 0, Frame 147:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F750
		pFences[0]: 					const VkFence = 000000000000009E

Thread 0, Frame 147:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 147:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 147:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 147:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 147:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801115460

Thread 0, Frame 147:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 000000000000009F

Thread 0, Frame 147:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801115460
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 147:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115460
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 147:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115460
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.52984
			float32[2]: 					float = 0.848097
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057465247
			int32[2]: 						int32_t = 1062804712
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057465247
			uint32[2]: 						uint32_t = 1062804712
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 147:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115460
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 147:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801115460

Thread 0, Frame 147:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F790
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801115460
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 000000000000009F

Thread 0, Frame 147:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 148:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F778
		pFences[0]: 					const VkFence = 000000000000009F
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 148:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 000000000000009F

Thread 0, Frame 148:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F778
		pFences[0]: 					const VkFence = 000000000000009F

Thread 0, Frame 148:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 148:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 148:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 148:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 148:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801117710

Thread 0, Frame 148:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A0

Thread 0, Frame 148:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801117710
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 148:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801117710
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 148:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801117710
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.550875
			float32[2]: 					float = 0.834588
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1057818152
			int32[2]: 						int32_t = 1062578057
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1057818152
			uint32[2]: 						uint32_t = 1062578057
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 148:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801117710
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 148:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801117710

Thread 0, Frame 148:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F7B8
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801117710
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A0

Thread 0, Frame 148:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 149:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7A0
		pFences[0]: 					const VkFence = 00000000000000A0
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 149:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A0

Thread 0, Frame 149:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7A0
		pFences[0]: 					const VkFence = 00000000000000A0

Thread 0, Frame 149:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 149:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 149:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 149:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 149:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801115FF0

Thread 0, Frame 149:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A1

Thread 0, Frame 149:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801115FF0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 149:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115FF0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 149:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115FF0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.571566
			float32[2]: 					float = 0.820556
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058165280
			int32[2]: 						int32_t = 1062342651
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058165280
			uint32[2]: 						uint32_t = 1062342651
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 149:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801115FF0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 149:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801115FF0

Thread 0, Frame 149:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F7E0
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801115FF0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A1

Thread 0, Frame 149:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 150:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7C8
		pFences[0]: 					const VkFence = 00000000000000A1
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 150:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A1

Thread 0, Frame 150:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7C8
		pFences[0]: 					const VkFence = 00000000000000A1

Thread 0, Frame 150:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 150:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 150:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 150:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 150:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801116B80

Thread 0, Frame 150:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A2

Thread 0, Frame 150:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801116B80
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 150:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801116B80
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 150:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801116B80
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.591899
			float32[2]: 					float = 0.806012
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058506415
			int32[2]: 						int32_t = 1062098641
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058506415
			uint32[2]: 						uint32_t = 1062098641
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 150:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801116B80
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 150:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801116B80

Thread 0, Frame 150:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F808
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801116B80
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A2

Thread 0, Frame 150:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 151:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7F0
		pFences[0]: 					const VkFence = 00000000000000A2
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 151:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A2

Thread 0, Frame 151:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F7F0
		pFences[0]: 					const VkFence = 00000000000000A2

Thread 0, Frame 151:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 151:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 151:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 151:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 151:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801110F00

Thread 0, Frame 151:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A3

Thread 0, Frame 151:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801110F00
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 151:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110F00
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 151:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110F00
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.611862
			float32[2]: 					float = 0.790964
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1058841344
			int32[2]: 						int32_t = 1061846180
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1058841344
			uint32[2]: 						uint32_t = 1061846180
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 151:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801110F00
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 151:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801110F00

Thread 0, Frame 151:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F830
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801110F00
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A3

Thread 0, Frame 151:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 152:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F818
		pFences[0]: 					const VkFence = 00000000000000A3
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 152:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A3

Thread 0, Frame 152:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F818
		pFences[0]: 					const VkFence = 00000000000000A3

Thread 0, Frame 152:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 152:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 152:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 152:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 152:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980111C800

Thread 0, Frame 152:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A4

Thread 0, Frame 152:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111C800
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 152:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111C800
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 152:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111C800
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.631443
			float32[2]: 					float = 0.775422
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059169858
			int32[2]: 						int32_t = 1061585426
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059169858
			uint32[2]: 						uint32_t = 1061585426
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 152:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111C800
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 152:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111C800

Thread 0, Frame 152:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F858
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980111C800
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A4

Thread 0, Frame 152:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 153:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F840
		pFences[0]: 					const VkFence = 00000000000000A4
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 153:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A4

Thread 0, Frame 153:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F840
		pFences[0]: 					const VkFence = 00000000000000A4

Thread 0, Frame 153:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 153:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 153:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 153:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 153:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198011199C0

Thread 0, Frame 153:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A5

Thread 0, Frame 153:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011199C0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 153:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011199C0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 153:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011199C0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.650629
			float32[2]: 					float = 0.759395
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059491750
			int32[2]: 						int32_t = 1061316541
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059491750
			uint32[2]: 						uint32_t = 1061316541
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 153:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011199C0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 153:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011199C0

Thread 0, Frame 153:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F880
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198011199C0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A5

Thread 0, Frame 153:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 154:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F868
		pFences[0]: 					const VkFence = 00000000000000A5
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 154:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A5

Thread 0, Frame 154:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F868
		pFences[0]: 					const VkFence = 00000000000000A5

Thread 0, Frame 154:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 154:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 154:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 154:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 154:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980111A550

Thread 0, Frame 154:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A6

Thread 0, Frame 154:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111A550
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 154:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111A550
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 154:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111A550
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.669409
			float32[2]: 					float = 0.742894
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1059806821
			int32[2]: 						int32_t = 1061039693
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1059806821
			uint32[2]: 						uint32_t = 1061039693
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 154:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111A550
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 154:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111A550

Thread 0, Frame 154:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F8A8
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980111A550
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A6

Thread 0, Frame 154:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 155:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F890
		pFences[0]: 					const VkFence = 00000000000000A6
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 155:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A6

Thread 0, Frame 155:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F890
		pFences[0]: 					const VkFence = 00000000000000A6

Thread 0, Frame 155:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 155:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 155:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 155:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 155:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980111B0E0

Thread 0, Frame 155:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A7

Thread 0, Frame 155:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111B0E0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 155:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111B0E0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 155:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111B0E0
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.68777
			float32[2]: 					float = 0.725928
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060114872
			int32[2]: 						int32_t = 1060755056
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060114872
			uint32[2]: 						uint32_t = 1060755056
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 155:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111B0E0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 155:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111B0E0

Thread 0, Frame 155:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F8D0
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980111B0E0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A7

Thread 0, Frame 155:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 156:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F8B8
		pFences[0]: 					const VkFence = 00000000000000A7
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 156:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A7

Thread 0, Frame 156:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F8B8
		pFences[0]: 					const VkFence = 00000000000000A7

Thread 0, Frame 156:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 156:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 156:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 156:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 156:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980111BC70

Thread 0, Frame 156:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A8

Thread 0, Frame 156:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111BC70
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 156:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111BC70
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 156:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111BC70
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.705702
			float32[2]: 					float = 0.708509
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060415712
			int32[2]: 						int32_t = 1060462807
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060415712
			uint32[2]: 						uint32_t = 1060462807
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 156:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111BC70
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 156:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111BC70

Thread 0, Frame 156:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F8F8
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980111BC70
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A8

Thread 0, Frame 156:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 157:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F8E0
		pFences[0]: 					const VkFence = 00000000000000A8
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 157:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A8

Thread 0, Frame 157:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F8E0
		pFences[0]: 					const VkFence = 00000000000000A8

Thread 0, Frame 157:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 157:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 157:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 157:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 157:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 000001980111D390

Thread 0, Frame 157:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000A9

Thread 0, Frame 157:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111D390
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 157:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111D390
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 157:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111D390
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.723192
			float32[2]: 					float = 0.690647
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060709153
			int32[2]: 						int32_t = 1060163130
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060709153
			uint32[2]: 						uint32_t = 1060163130
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 157:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 000001980111D390
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 157:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 000001980111D390

Thread 0, Frame 157:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F920
				pCommandBuffers[0]: 			const VkCommandBuffer = 000001980111D390
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000A9

Thread 0, Frame 157:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 158:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F908
		pFences[0]: 					const VkFence = 00000000000000A9
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 158:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000A9

Thread 0, Frame 158:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F908
		pFences[0]: 					const VkFence = 00000000000000A9

Thread 0, Frame 158:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 158:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 158:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 158:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 158:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198011182A0

Thread 0, Frame 158:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000AA

Thread 0, Frame 158:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011182A0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 158:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011182A0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 158:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011182A0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.740231
			float32[2]: 					float = 0.672353
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1060995011
			int32[2]: 						int32_t = 1059856211
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1060995011
			uint32[2]: 						uint32_t = 1059856211
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 158:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011182A0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 158:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011182A0

Thread 0, Frame 158:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F948
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198011182A0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000AA

Thread 0, Frame 158:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 159:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F930
		pFences[0]: 					const VkFence = 00000000000000AA
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 159:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000AA

Thread 0, Frame 159:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F930
		pFences[0]: 					const VkFence = 00000000000000AA

Thread 0, Frame 159:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

Thread 0, Frame 159:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 159:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 159:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 159:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 0000019801118E30

Thread 0, Frame 159:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000AB

Thread 0, Frame 159:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801118E30
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 159:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801118E30
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 159:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801118E30
	image: 							VkImage = 0000000000000009
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.756807
			float32[2]: 					float = 0.653639
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061273107
			int32[2]: 						int32_t = 1059542242
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061273107
			uint32[2]: 						uint32_t = 1059542242
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 159:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 0000019801118E30
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000009
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 159:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 0000019801118E30

Thread 0, Frame 159:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F970
				pCommandBuffers[0]: 			const VkCommandBuffer = 0000019801118E30
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000AB

Thread 0, Frame 159:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 1
		pResults: 						VkResult* = NULL

Thread 0, Frame 160:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F958
		pFences[0]: 					const VkFence = 00000000000000AB
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 160:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000AB

Thread 0, Frame 160:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F958
		pFences[0]: 					const VkFence = 00000000000000AB

Thread 0, Frame 160:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 0

Thread 0, Frame 160:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000001
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 160:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000002
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 160:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	commandPool: 					VkCommandPool = 0000000000000003
	flags: 							VkCommandPoolResetFlags = 0

Thread 0, Frame 160:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pAllocateInfo: 					const VkCommandBufferAllocateInfo* = 00000093924FEE78:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
		pNext: 							const void* = NULL
		commandPool: 					VkCommandPool = 0000000000000001
		level: 							VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
		commandBufferCount: 			uint32_t = 1
	pCommandBuffers: 				VkCommandBuffer* = 00000093924FF050
		pCommandBuffers[0]: 			VkCommandBuffer = 00000198011771B0

Thread 0, Frame 160:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	pCreateInfo: 					const VkFenceCreateInfo* = 00000093924FED48:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
		pNext: 							const void* = NULL
		flags: 							VkFenceCreateFlags = 0
	pAllocator: 					const VkAllocationCallbacks* = NULL
	pFence: 						VkFence* = 00000000000000AC

Thread 0, Frame 160:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011771B0
	pBeginInfo: 					const VkCommandBufferBeginInfo* = 00000093924FF038:
		sType: 							VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
		pNext: 							const void* = NULL
		flags: 							VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		pInheritanceInfo: 				const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 160:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011771B0
	srcStageMask: 					VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
	dstStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 0
			dstAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
			newLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 160:
vkCmdClearColorImage(commandBuffer, image, imageLayout, pColor, rangeCount, pRanges) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011771B0
	image: 							VkImage = 0000000000000008
	imageLayout: 					VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
	pColor: 						const VkClearColorValue* = 00000093924FF238 (Union):
		float32: 						float[4] = 00000093924FF238
			float32[0]: 					float = 0
			float32[1]: 					float = 0.772909
			float32[2]: 					float = 0.634516
			float32[3]: 					float = 0
		int32: 							int32_t[4] = 00000093924FF238
			int32[0]: 						int32_t = 0
			int32[1]: 						int32_t = 1061543268
			int32[2]: 						int32_t = 1059221419
			int32[3]: 						int32_t = 0
		uint32: 						uint32_t[4] = 00000093924FF238
			uint32[0]: 						uint32_t = 0
			uint32[1]: 						uint32_t = 1061543268
			uint32[2]: 						uint32_t = 1059221419
			uint32[3]: 						uint32_t = 0
	rangeCount: 					uint32_t = 1
	pRanges: 						const VkImageSubresourceRange* = 00000093924FF268
		pRanges[0]: 					const VkImageSubresourceRange = 00000093924FF268:
			aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
			baseMipLevel: 					uint32_t = 0
			levelCount: 					uint32_t = 1
			baseArrayLayer: 				uint32_t = 0
			layerCount: 					uint32_t = 1

Thread 0, Frame 160:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
	commandBuffer: 					VkCommandBuffer = 00000198011771B0
	srcStageMask: 					VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
	dstStageMask: 					VkPipelineStageFlags = 8192 (VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
	dependencyFlags: 				VkDependencyFlags = 0
	memoryBarrierCount: 			uint32_t = 0
	pMemoryBarriers: 				const VkMemoryBarrier* = NULL
	bufferMemoryBarrierCount: 		uint32_t = 0
	pBufferMemoryBarriers: 			const VkBufferMemoryBarrier* = NULL
	imageMemoryBarrierCount: 		uint32_t = 1
	pImageMemoryBarriers: 			const VkImageMemoryBarrier* = 00000093924FF230
		pImageMemoryBarriers[0]: 		const VkImageMemoryBarrier = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
			pNext: 							const void* = NULL
			srcAccessMask: 					VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
			dstAccessMask: 					VkAccessFlags = 0
			oldLayout: 						VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
			newLayout: 						VkImageLayout = UNKNOWN (1000001002)
			srcQueueFamilyIndex: 			uint32_t = 0
			dstQueueFamilyIndex: 			uint32_t = 0
			image: 							VkImage = 0000000000000008
			subresourceRange: 				VkImageSubresourceRange = 00000093924FF260:
				aspectMask: 					VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
				baseMipLevel: 					uint32_t = 0
				levelCount: 					uint32_t = 1
				baseArrayLayer: 				uint32_t = 0
				layerCount: 					uint32_t = 1

Thread 0, Frame 160:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
	commandBuffer: 					VkCommandBuffer = 00000198011771B0

Thread 0, Frame 160:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	submitCount: 					uint32_t = 1
	pSubmits: 						const VkSubmitInfo* = 00000093924FF230
		pSubmits[0]: 					const VkSubmitInfo = 00000093924FF230:
			sType: 							VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
			pNext: 							const void* = NULL
			waitSemaphoreCount: 			uint32_t = 1
			pWaitSemaphores: 				const VkSemaphore* = 00000093924FF390
				pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000005
			pWaitDstStageMask: 				const VkPipelineStageFlags* = 00000093924FF388
				pWaitDstStageMask[0]: 			const VkPipelineStageFlags = 1024 (VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
			commandBufferCount: 			uint32_t = 1
			pCommandBuffers: 				const VkCommandBuffer* = 000001980111F998
				pCommandBuffers[0]: 			const VkCommandBuffer = 00000198011771B0
			signalSemaphoreCount: 			uint32_t = 1
			pSignalSemaphores: 				const VkSemaphore* = 00000093924FF398
				pSignalSemaphores[0]: 			const VkSemaphore = 0000000000000006
	fence: 							VkFence = 00000000000000AC

Thread 0, Frame 160:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
	queue: 							VkQueue = 000001987ADE40E0
	pPresentInfo: 					const VkPresentInfoKHR* = 00000093924FF240:
		sType: 							VkStructureType = UNKNOWN (1000001001)
		pNext: 							const void* = NULL
		waitSemaphoreCount: 			uint32_t = 1
		pWaitSemaphores: 				const VkSemaphore* = 00000093924FF380
			pWaitSemaphores[0]: 			const VkSemaphore = 0000000000000006
		swapchainCount: 				uint32_t = 1
		pSwapchains: 					const VkSwapchainKHR* = 00007FF67F619C18
			pSwapchains[0]: 				const VkSwapchainKHR = 0000000000000007
		pImageIndices: 					const uint32_t* = 00007FF67F619C30
			pImageIndices[0]: 				const uint32_t = 0
		pResults: 						VkResult* = NULL

Thread 0, Frame 161:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F980
		pFences[0]: 					const VkFence = 00000000000000AC
	waitAll: 						VkBool32 = 1
	timeout: 						uint64_t = 5000000

Thread 0, Frame 161:
vkGetFenceStatus(device, fence) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fence: 							VkFence = 00000000000000AC

Thread 0, Frame 161:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	fenceCount: 					uint32_t = 1
	pFences: 						const VkFence* = 000001980111F980
		pFences[0]: 					const VkFence = 00000000000000AC

Thread 0, Frame 161:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
	device: 						VkDevice = 000001987B7535F0
	swapchain: 						VkSwapchainKHR = 0000000000000007
	timeout: 						uint64_t = 5000000
	semaphore: 						VkSemaphore = 0000000000000005
	fence: 							VkFence = 0000000000000000
	pImageIndex: 					uint32_t* = 1

